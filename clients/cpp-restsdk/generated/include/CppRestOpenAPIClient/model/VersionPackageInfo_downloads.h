/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.6.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * VersionPackageInfo_downloads.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_VersionPackageInfo_downloads_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_VersionPackageInfo_downloads_H_


#include "CppRestOpenAPIClient/ModelBase.h"

#include "CppRestOpenAPIClient/model/Download.h"

namespace org {
namespace openapitools {
namespace client {
namespace model {

class Download;

/// <summary>
/// 
/// </summary>
class  VersionPackageInfo_downloads
    : public ModelBase
{
public:
    VersionPackageInfo_downloads();
    virtual ~VersionPackageInfo_downloads();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;

    /////////////////////////////////////////////
    /// VersionPackageInfo_downloads members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Download> getClient() const;
    bool clientIsSet() const;
    void unsetClient();

    void setClient(const std::shared_ptr<Download>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Download> getClientMappings() const;
    bool clientMappingsIsSet() const;
    void unsetClient_mappings();

    void setClientMappings(const std::shared_ptr<Download>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Download> getServer() const;
    bool serverIsSet() const;
    void unsetServer();

    void setServer(const std::shared_ptr<Download>& value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Download> getServerMappings() const;
    bool serverMappingsIsSet() const;
    void unsetServer_mappings();

    void setServerMappings(const std::shared_ptr<Download>& value);


protected:
    std::shared_ptr<Download> m_Client;
    bool m_ClientIsSet;
    std::shared_ptr<Download> m_Client_mappings;
    bool m_Client_mappingsIsSet;
    std::shared_ptr<Download> m_Server;
    bool m_ServerIsSet;
    std::shared_ptr<Download> m_Server_mappings;
    bool m_Server_mappingsIsSet;
};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_VersionPackageInfo_downloads_H_ */
