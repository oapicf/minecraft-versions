/*
 * openapi-micronaut
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.12.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.controller;

import io.micronaut.http.annotation.*;
import io.micronaut.core.annotation.Nullable;
import io.micronaut.core.convert.format.Format;
import io.micronaut.security.annotation.Secured;
import io.micronaut.security.rules.SecurityRule;
import reactor.core.publisher.Mono;
import io.micronaut.http.HttpStatus;
import io.micronaut.http.exceptions.HttpStatusException;
import org.openapitools.model.VersionManifest;
import org.openapitools.model.VersionPackageInfo;
import javax.annotation.Generated;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.validation.Valid;
import javax.validation.constraints.*;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.Parameters;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import io.swagger.v3.oas.annotations.security.SecurityRequirement;

@Generated(value="org.openapitools.codegen.languages.JavaMicronautServerCodegen", date="2024-11-03T05:50:36.563568562Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Controller
@Tag(name = "Default", description = "The Default API")
public class DefaultController {
    /**
     * Get Minecraft version manifest
     *
     * @return VersionManifest
     */
    @Operation(
        operationId = "getMinecraftVersionManifest",
        summary = "Get Minecraft version manifest",
        responses = {
            @ApiResponse(responseCode = "200", description = "A list of Minecraft versions with the latest and snapshot releases", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = VersionManifest.class))
            })
        }
    )
    @Get(uri="/mc/game/version_manifest.json")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public Mono<VersionManifest> getMinecraftVersionManifest() {
        // TODO implement getMinecraftVersionManifest();
        return Mono.error(new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null));
    }


    /**
     * Get Minecraft version package info
     *
     * @param packageId  (required)
     * @param versionId  (required)
     * @return VersionPackageInfo
     */
    @Operation(
        operationId = "getMinecraftVersionPackageInfo",
        summary = "Get Minecraft version package info",
        responses = {
            @ApiResponse(responseCode = "200", description = "Get package version details", content = {
                @Content(mediaType = "application/json", schema = @Schema(implementation = VersionPackageInfo.class))
            })
        },
        parameters = {
            @Parameter(name = "packageId", required = true),
            @Parameter(name = "versionId", required = true)
        }
    )
    @Get(uri="/v1/packages/{packageId}/{versionId}.json")
    @Produces(value = {"application/json"})
    @Secured({SecurityRule.IS_ANONYMOUS})
    public Mono<VersionPackageInfo> getMinecraftVersionPackageInfo(
        @PathVariable(value="packageId") @NotNull String packageId, 
        @PathVariable(value="versionId") @NotNull String versionId
    ) {
        // TODO implement getMinecraftVersionPackageInfo();
        return Mono.error(new HttpStatusException(HttpStatus.NOT_IMPLEMENTED, null));
    }

}
