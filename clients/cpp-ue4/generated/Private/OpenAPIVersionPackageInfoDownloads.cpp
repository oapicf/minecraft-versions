/**
 * 
 * SDK for Minecraft versions info
 *
 * OpenAPI spec version: 1.1.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

#include "OpenAPIVersionPackageInfoDownloads.h"

#include "OpenAPIModule.h"
#include "OpenAPIHelpers.h"

#include "Templates/SharedPointer.h"

namespace OpenAPI
{

void OpenAPIVersionPackageInfoDownloads::WriteJson(JsonWriter& Writer) const
{
	Writer->WriteObjectStart();
	if (Client.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("client")); WriteJsonValue(Writer, Client.GetValue());
	}
	if (ClientMappings.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("client_mappings")); WriteJsonValue(Writer, ClientMappings.GetValue());
	}
	if (Server.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("server")); WriteJsonValue(Writer, Server.GetValue());
	}
	if (ServerMappings.IsSet())
	{
		Writer->WriteIdentifierPrefix(TEXT("server_mappings")); WriteJsonValue(Writer, ServerMappings.GetValue());
	}
	Writer->WriteObjectEnd();
}

bool OpenAPIVersionPackageInfoDownloads::FromJson(const TSharedPtr<FJsonValue>& JsonValue)
{
	const TSharedPtr<FJsonObject>* Object;
	if (!JsonValue->TryGetObject(Object))
		return false;

	bool ParseSuccess = true;

	ParseSuccess &= TryGetJsonValue(*Object, TEXT("client"), Client);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("client_mappings"), ClientMappings);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("server"), Server);
	ParseSuccess &= TryGetJsonValue(*Object, TEXT("server_mappings"), ServerMappings);

	return ParseSuccess;
}

}
