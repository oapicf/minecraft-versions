/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.12.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VersionPackageInfoAssetIndex from './VersionPackageInfoAssetIndex';
import VersionPackageInfoDownloads from './VersionPackageInfoDownloads';
import VersionPackageInfoJavaVersion from './VersionPackageInfoJavaVersion';

/**
 * The VersionPackageInfo model module.
 * @module model/VersionPackageInfo
 * @version 0.12.1-pre.0
 */
class VersionPackageInfo {
    /**
     * Constructs a new <code>VersionPackageInfo</code>.
     * @alias module:model/VersionPackageInfo
     */
    constructor() { 
        
        VersionPackageInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VersionPackageInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VersionPackageInfo} obj Optional instance to populate.
     * @return {module:model/VersionPackageInfo} The populated <code>VersionPackageInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VersionPackageInfo();

            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('assetIndex')) {
                obj['assetIndex'] = VersionPackageInfoAssetIndex.constructFromObject(data['assetIndex']);
            }
            if (data.hasOwnProperty('assets')) {
                obj['assets'] = ApiClient.convertToType(data['assets'], 'String');
            }
            if (data.hasOwnProperty('complianceLevel')) {
                obj['complianceLevel'] = ApiClient.convertToType(data['complianceLevel'], 'Number');
            }
            if (data.hasOwnProperty('downloads')) {
                obj['downloads'] = VersionPackageInfoDownloads.constructFromObject(data['downloads']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('javaVersion')) {
                obj['javaVersion'] = VersionPackageInfoJavaVersion.constructFromObject(data['javaVersion']);
            }
            if (data.hasOwnProperty('mainClass')) {
                obj['mainClass'] = ApiClient.convertToType(data['mainClass'], 'String');
            }
            if (data.hasOwnProperty('minimumLauncherVersion')) {
                obj['minimumLauncherVersion'] = ApiClient.convertToType(data['minimumLauncherVersion'], 'Number');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'Date');
            }
            if (data.hasOwnProperty('releaseTime')) {
                obj['releaseTime'] = ApiClient.convertToType(data['releaseTime'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VersionPackageInfo</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VersionPackageInfo</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }
        // validate the optional field `assetIndex`
        if (data['assetIndex']) { // data not null
          VersionPackageInfoAssetIndex.validateJSON(data['assetIndex']);
        }
        // ensure the json data is a string
        if (data['assets'] && !(typeof data['assets'] === 'string' || data['assets'] instanceof String)) {
            throw new Error("Expected the field `assets` to be a primitive type in the JSON string but got " + data['assets']);
        }
        // validate the optional field `downloads`
        if (data['downloads']) { // data not null
          VersionPackageInfoDownloads.validateJSON(data['downloads']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `javaVersion`
        if (data['javaVersion']) { // data not null
          VersionPackageInfoJavaVersion.validateJSON(data['javaVersion']);
        }
        // ensure the json data is a string
        if (data['mainClass'] && !(typeof data['mainClass'] === 'string' || data['mainClass'] instanceof String)) {
            throw new Error("Expected the field `mainClass` to be a primitive type in the JSON string but got " + data['mainClass']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {String} version
 */
VersionPackageInfo.prototype['version'] = undefined;

/**
 * @member {module:model/VersionPackageInfoAssetIndex} assetIndex
 */
VersionPackageInfo.prototype['assetIndex'] = undefined;

/**
 * @member {String} assets
 */
VersionPackageInfo.prototype['assets'] = undefined;

/**
 * @member {Number} complianceLevel
 */
VersionPackageInfo.prototype['complianceLevel'] = undefined;

/**
 * @member {module:model/VersionPackageInfoDownloads} downloads
 */
VersionPackageInfo.prototype['downloads'] = undefined;

/**
 * @member {String} id
 */
VersionPackageInfo.prototype['id'] = undefined;

/**
 * @member {module:model/VersionPackageInfoJavaVersion} javaVersion
 */
VersionPackageInfo.prototype['javaVersion'] = undefined;

/**
 * @member {String} mainClass
 */
VersionPackageInfo.prototype['mainClass'] = undefined;

/**
 * @member {Number} minimumLauncherVersion
 */
VersionPackageInfo.prototype['minimumLauncherVersion'] = undefined;

/**
 * @member {Date} time
 */
VersionPackageInfo.prototype['time'] = undefined;

/**
 * @member {Date} releaseTime
 */
VersionPackageInfo.prototype['releaseTime'] = undefined;

/**
 * @member {String} type
 */
VersionPackageInfo.prototype['type'] = undefined;






export default VersionPackageInfo;

