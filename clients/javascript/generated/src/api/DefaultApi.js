/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import McGameVersionManifestGet200Response from '../model/McGameVersionManifestGet200Response';
import V1PackagesPackageIdVersionIdJsonGet200Response from '../model/V1PackagesPackageIdVersionIdJsonGet200Response';

/**
* Default service.
* @module api/DefaultApi
* @version 0.9.0-pre.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the mcGameVersionManifestGet operation.
     * @callback module:api/DefaultApi~mcGameVersionManifestGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/McGameVersionManifestGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Minecraft version manifest
     * @param {module:api/DefaultApi~mcGameVersionManifestGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/McGameVersionManifestGet200Response}
     */
    mcGameVersionManifestGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = McGameVersionManifestGet200Response;
      return this.apiClient.callApi(
        '/mc/game/version_manifest', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v1PackagesPackageIdVersionIdJsonGet operation.
     * @callback module:api/DefaultApi~v1PackagesPackageIdVersionIdJsonGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/V1PackagesPackageIdVersionIdJsonGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Minecraft version package details
     * @param {String} packageId 
     * @param {String} versionId 
     * @param {module:api/DefaultApi~v1PackagesPackageIdVersionIdJsonGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/V1PackagesPackageIdVersionIdJsonGet200Response}
     */
    v1PackagesPackageIdVersionIdJsonGet(packageId, versionId, callback) {
      let postBody = null;
      // verify the required parameter 'packageId' is set
      if (packageId === undefined || packageId === null) {
        throw new Error("Missing the required parameter 'packageId' when calling v1PackagesPackageIdVersionIdJsonGet");
      }
      // verify the required parameter 'versionId' is set
      if (versionId === undefined || versionId === null) {
        throw new Error("Missing the required parameter 'versionId' when calling v1PackagesPackageIdVersionIdJsonGet");
      }

      let pathParams = {
        'packageId': packageId,
        'versionId': versionId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = V1PackagesPackageIdVersionIdJsonGet200Response;
      return this.apiClient.callApi(
        '/v1/packages/{packageId}/{versionId}.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
