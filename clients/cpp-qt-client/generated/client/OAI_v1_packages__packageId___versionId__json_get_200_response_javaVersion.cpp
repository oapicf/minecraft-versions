/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion() {
    this->initializeModel();
}

OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::~OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion() {}

void OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::initializeModel() {

    m_component_isSet = false;
    m_component_isValid = false;

    m_major_version_isSet = false;
    m_major_version_isValid = false;
}

void OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::fromJsonObject(QJsonObject json) {

    m_component_isValid = ::OpenAPI::fromJsonValue(m_component, json[QString("component")]);
    m_component_isSet = !json[QString("component")].isNull() && m_component_isValid;

    m_major_version_isValid = ::OpenAPI::fromJsonValue(m_major_version, json[QString("majorVersion")]);
    m_major_version_isSet = !json[QString("majorVersion")].isNull() && m_major_version_isValid;
}

QString OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::asJsonObject() const {
    QJsonObject obj;
    if (m_component_isSet) {
        obj.insert(QString("component"), ::OpenAPI::toJsonValue(m_component));
    }
    if (m_major_version_isSet) {
        obj.insert(QString("majorVersion"), ::OpenAPI::toJsonValue(m_major_version));
    }
    return obj;
}

QString OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::getComponent() const {
    return m_component;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::setComponent(const QString &component) {
    m_component = component;
    m_component_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::is_component_Set() const{
    return m_component_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::is_component_Valid() const{
    return m_component_isValid;
}

qint32 OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::getMajorVersion() const {
    return m_major_version;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::setMajorVersion(const qint32 &major_version) {
    m_major_version = major_version;
    m_major_version_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::is_major_version_Set() const{
    return m_major_version_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::is_major_version_Valid() const{
    return m_major_version_isValid;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_component_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_major_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
