/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_v1_packages__packageId___versionId__json_get_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_v1_packages__packageId___versionId__json_get_200_response::OAI_v1_packages__packageId___versionId__json_get_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_v1_packages__packageId___versionId__json_get_200_response::OAI_v1_packages__packageId___versionId__json_get_200_response() {
    this->initializeModel();
}

OAI_v1_packages__packageId___versionId__json_get_200_response::~OAI_v1_packages__packageId___versionId__json_get_200_response() {}

void OAI_v1_packages__packageId___versionId__json_get_200_response::initializeModel() {

    m_version_isSet = false;
    m_version_isValid = false;

    m_asset_index_isSet = false;
    m_asset_index_isValid = false;

    m_assets_isSet = false;
    m_assets_isValid = false;

    m_compliance_level_isSet = false;
    m_compliance_level_isValid = false;

    m_downloads_isSet = false;
    m_downloads_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_java_version_isSet = false;
    m_java_version_isValid = false;

    m_main_class_isSet = false;
    m_main_class_isValid = false;

    m_minimum_launcher_version_isSet = false;
    m_minimum_launcher_version_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;

    m_release_time_isSet = false;
    m_release_time_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAI_v1_packages__packageId___versionId__json_get_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_v1_packages__packageId___versionId__json_get_200_response::fromJsonObject(QJsonObject json) {

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("version")]);
    m_version_isSet = !json[QString("version")].isNull() && m_version_isValid;

    m_asset_index_isValid = ::OpenAPI::fromJsonValue(m_asset_index, json[QString("assetIndex")]);
    m_asset_index_isSet = !json[QString("assetIndex")].isNull() && m_asset_index_isValid;

    m_assets_isValid = ::OpenAPI::fromJsonValue(m_assets, json[QString("assets")]);
    m_assets_isSet = !json[QString("assets")].isNull() && m_assets_isValid;

    m_compliance_level_isValid = ::OpenAPI::fromJsonValue(m_compliance_level, json[QString("complianceLevel")]);
    m_compliance_level_isSet = !json[QString("complianceLevel")].isNull() && m_compliance_level_isValid;

    m_downloads_isValid = ::OpenAPI::fromJsonValue(m_downloads, json[QString("downloads")]);
    m_downloads_isSet = !json[QString("downloads")].isNull() && m_downloads_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_java_version_isValid = ::OpenAPI::fromJsonValue(m_java_version, json[QString("javaVersion")]);
    m_java_version_isSet = !json[QString("javaVersion")].isNull() && m_java_version_isValid;

    m_main_class_isValid = ::OpenAPI::fromJsonValue(m_main_class, json[QString("mainClass")]);
    m_main_class_isSet = !json[QString("mainClass")].isNull() && m_main_class_isValid;

    m_minimum_launcher_version_isValid = ::OpenAPI::fromJsonValue(m_minimum_launcher_version, json[QString("minimumLauncherVersion")]);
    m_minimum_launcher_version_isSet = !json[QString("minimumLauncherVersion")].isNull() && m_minimum_launcher_version_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;

    m_release_time_isValid = ::OpenAPI::fromJsonValue(m_release_time, json[QString("releaseTime")]);
    m_release_time_isSet = !json[QString("releaseTime")].isNull() && m_release_time_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAI_v1_packages__packageId___versionId__json_get_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_v1_packages__packageId___versionId__json_get_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_version_isSet) {
        obj.insert(QString("version"), ::OpenAPI::toJsonValue(m_version));
    }
    if (m_asset_index.isSet()) {
        obj.insert(QString("assetIndex"), ::OpenAPI::toJsonValue(m_asset_index));
    }
    if (m_assets_isSet) {
        obj.insert(QString("assets"), ::OpenAPI::toJsonValue(m_assets));
    }
    if (m_compliance_level_isSet) {
        obj.insert(QString("complianceLevel"), ::OpenAPI::toJsonValue(m_compliance_level));
    }
    if (m_downloads.isSet()) {
        obj.insert(QString("downloads"), ::OpenAPI::toJsonValue(m_downloads));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_java_version.isSet()) {
        obj.insert(QString("javaVersion"), ::OpenAPI::toJsonValue(m_java_version));
    }
    if (m_main_class_isSet) {
        obj.insert(QString("mainClass"), ::OpenAPI::toJsonValue(m_main_class));
    }
    if (m_minimum_launcher_version_isSet) {
        obj.insert(QString("minimumLauncherVersion"), ::OpenAPI::toJsonValue(m_minimum_launcher_version));
    }
    if (m_time_isSet) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(m_time));
    }
    if (m_release_time_isSet) {
        obj.insert(QString("releaseTime"), ::OpenAPI::toJsonValue(m_release_time));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAI_v1_packages__packageId___versionId__json_get_200_response::getVersion() const {
    return m_version;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response::setVersion(const QString &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_version_Set() const{
    return m_version_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_version_Valid() const{
    return m_version_isValid;
}

OAI_v1_packages__packageId___versionId__json_get_200_response_assetIndex OAI_v1_packages__packageId___versionId__json_get_200_response::getAssetIndex() const {
    return m_asset_index;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response::setAssetIndex(const OAI_v1_packages__packageId___versionId__json_get_200_response_assetIndex &asset_index) {
    m_asset_index = asset_index;
    m_asset_index_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_asset_index_Set() const{
    return m_asset_index_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_asset_index_Valid() const{
    return m_asset_index_isValid;
}

qint32 OAI_v1_packages__packageId___versionId__json_get_200_response::getAssets() const {
    return m_assets;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response::setAssets(const qint32 &assets) {
    m_assets = assets;
    m_assets_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_assets_Set() const{
    return m_assets_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_assets_Valid() const{
    return m_assets_isValid;
}

qint32 OAI_v1_packages__packageId___versionId__json_get_200_response::getComplianceLevel() const {
    return m_compliance_level;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response::setComplianceLevel(const qint32 &compliance_level) {
    m_compliance_level = compliance_level;
    m_compliance_level_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_compliance_level_Set() const{
    return m_compliance_level_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_compliance_level_Valid() const{
    return m_compliance_level_isValid;
}

OAI_v1_packages__packageId___versionId__json_get_200_response_downloads OAI_v1_packages__packageId___versionId__json_get_200_response::getDownloads() const {
    return m_downloads;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response::setDownloads(const OAI_v1_packages__packageId___versionId__json_get_200_response_downloads &downloads) {
    m_downloads = downloads;
    m_downloads_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_downloads_Set() const{
    return m_downloads_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_downloads_Valid() const{
    return m_downloads_isValid;
}

QString OAI_v1_packages__packageId___versionId__json_get_200_response::getId() const {
    return m_id;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_id_Set() const{
    return m_id_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_id_Valid() const{
    return m_id_isValid;
}

OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion OAI_v1_packages__packageId___versionId__json_get_200_response::getJavaVersion() const {
    return m_java_version;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response::setJavaVersion(const OAI_v1_packages__packageId___versionId__json_get_200_response_javaVersion &java_version) {
    m_java_version = java_version;
    m_java_version_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_java_version_Set() const{
    return m_java_version_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_java_version_Valid() const{
    return m_java_version_isValid;
}

QString OAI_v1_packages__packageId___versionId__json_get_200_response::getMainClass() const {
    return m_main_class;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response::setMainClass(const QString &main_class) {
    m_main_class = main_class;
    m_main_class_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_main_class_Set() const{
    return m_main_class_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_main_class_Valid() const{
    return m_main_class_isValid;
}

qint32 OAI_v1_packages__packageId___versionId__json_get_200_response::getMinimumLauncherVersion() const {
    return m_minimum_launcher_version;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response::setMinimumLauncherVersion(const qint32 &minimum_launcher_version) {
    m_minimum_launcher_version = minimum_launcher_version;
    m_minimum_launcher_version_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_minimum_launcher_version_Set() const{
    return m_minimum_launcher_version_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_minimum_launcher_version_Valid() const{
    return m_minimum_launcher_version_isValid;
}

QDateTime OAI_v1_packages__packageId___versionId__json_get_200_response::getTime() const {
    return m_time;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response::setTime(const QDateTime &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_time_Set() const{
    return m_time_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_time_Valid() const{
    return m_time_isValid;
}

QDateTime OAI_v1_packages__packageId___versionId__json_get_200_response::getReleaseTime() const {
    return m_release_time;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response::setReleaseTime(const QDateTime &release_time) {
    m_release_time = release_time;
    m_release_time_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_release_time_Set() const{
    return m_release_time_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_release_time_Valid() const{
    return m_release_time_isValid;
}

QString OAI_v1_packages__packageId___versionId__json_get_200_response::getType() const {
    return m_type;
}
void OAI_v1_packages__packageId___versionId__json_get_200_response::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_type_Set() const{
    return m_type_isSet;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::is_type_Valid() const{
    return m_type_isValid;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_asset_index.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_assets_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_compliance_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_downloads.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_java_version.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_main_class_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_minimum_launcher_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_v1_packages__packageId___versionId__json_get_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
