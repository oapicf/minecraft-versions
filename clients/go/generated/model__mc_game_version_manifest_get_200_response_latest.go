/*
SDK for Minecraft versions info

API version: 0.9.0-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the McGameVersionManifestGet200ResponseLatest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &McGameVersionManifestGet200ResponseLatest{}

// McGameVersionManifestGet200ResponseLatest struct for McGameVersionManifestGet200ResponseLatest
type McGameVersionManifestGet200ResponseLatest struct {
	Release *string `json:"release,omitempty"`
	Snapshot *string `json:"snapshot,omitempty"`
}

// NewMcGameVersionManifestGet200ResponseLatest instantiates a new McGameVersionManifestGet200ResponseLatest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMcGameVersionManifestGet200ResponseLatest() *McGameVersionManifestGet200ResponseLatest {
	this := McGameVersionManifestGet200ResponseLatest{}
	return &this
}

// NewMcGameVersionManifestGet200ResponseLatestWithDefaults instantiates a new McGameVersionManifestGet200ResponseLatest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMcGameVersionManifestGet200ResponseLatestWithDefaults() *McGameVersionManifestGet200ResponseLatest {
	this := McGameVersionManifestGet200ResponseLatest{}
	return &this
}

// GetRelease returns the Release field value if set, zero value otherwise.
func (o *McGameVersionManifestGet200ResponseLatest) GetRelease() string {
	if o == nil || IsNil(o.Release) {
		var ret string
		return ret
	}
	return *o.Release
}

// GetReleaseOk returns a tuple with the Release field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McGameVersionManifestGet200ResponseLatest) GetReleaseOk() (*string, bool) {
	if o == nil || IsNil(o.Release) {
		return nil, false
	}
	return o.Release, true
}

// HasRelease returns a boolean if a field has been set.
func (o *McGameVersionManifestGet200ResponseLatest) HasRelease() bool {
	if o != nil && !IsNil(o.Release) {
		return true
	}

	return false
}

// SetRelease gets a reference to the given string and assigns it to the Release field.
func (o *McGameVersionManifestGet200ResponseLatest) SetRelease(v string) {
	o.Release = &v
}

// GetSnapshot returns the Snapshot field value if set, zero value otherwise.
func (o *McGameVersionManifestGet200ResponseLatest) GetSnapshot() string {
	if o == nil || IsNil(o.Snapshot) {
		var ret string
		return ret
	}
	return *o.Snapshot
}

// GetSnapshotOk returns a tuple with the Snapshot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *McGameVersionManifestGet200ResponseLatest) GetSnapshotOk() (*string, bool) {
	if o == nil || IsNil(o.Snapshot) {
		return nil, false
	}
	return o.Snapshot, true
}

// HasSnapshot returns a boolean if a field has been set.
func (o *McGameVersionManifestGet200ResponseLatest) HasSnapshot() bool {
	if o != nil && !IsNil(o.Snapshot) {
		return true
	}

	return false
}

// SetSnapshot gets a reference to the given string and assigns it to the Snapshot field.
func (o *McGameVersionManifestGet200ResponseLatest) SetSnapshot(v string) {
	o.Snapshot = &v
}

func (o McGameVersionManifestGet200ResponseLatest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o McGameVersionManifestGet200ResponseLatest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Release) {
		toSerialize["release"] = o.Release
	}
	if !IsNil(o.Snapshot) {
		toSerialize["snapshot"] = o.Snapshot
	}
	return toSerialize, nil
}

type NullableMcGameVersionManifestGet200ResponseLatest struct {
	value *McGameVersionManifestGet200ResponseLatest
	isSet bool
}

func (v NullableMcGameVersionManifestGet200ResponseLatest) Get() *McGameVersionManifestGet200ResponseLatest {
	return v.value
}

func (v *NullableMcGameVersionManifestGet200ResponseLatest) Set(val *McGameVersionManifestGet200ResponseLatest) {
	v.value = val
	v.isSet = true
}

func (v NullableMcGameVersionManifestGet200ResponseLatest) IsSet() bool {
	return v.isSet
}

func (v *NullableMcGameVersionManifestGet200ResponseLatest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMcGameVersionManifestGet200ResponseLatest(val *McGameVersionManifestGet200ResponseLatest) *NullableMcGameVersionManifestGet200ResponseLatest {
	return &NullableMcGameVersionManifestGet200ResponseLatest{value: val, isSet: true}
}

func (v NullableMcGameVersionManifestGet200ResponseLatest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMcGameVersionManifestGet200ResponseLatest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


