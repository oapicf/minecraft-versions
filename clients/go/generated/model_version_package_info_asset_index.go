/*
SDK for Minecraft versions info

API version: 0.9.0-pre.0
Contact: blah+oapicf@cliffano.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the VersionPackageInfoAssetIndex type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VersionPackageInfoAssetIndex{}

// VersionPackageInfoAssetIndex struct for VersionPackageInfoAssetIndex
type VersionPackageInfoAssetIndex struct {
	Id *string `json:"id,omitempty"`
	Sha1 *string `json:"sha1,omitempty"`
	Size *int32 `json:"size,omitempty"`
	TotalSize *int32 `json:"totalSize,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewVersionPackageInfoAssetIndex instantiates a new VersionPackageInfoAssetIndex object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionPackageInfoAssetIndex() *VersionPackageInfoAssetIndex {
	this := VersionPackageInfoAssetIndex{}
	return &this
}

// NewVersionPackageInfoAssetIndexWithDefaults instantiates a new VersionPackageInfoAssetIndex object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionPackageInfoAssetIndexWithDefaults() *VersionPackageInfoAssetIndex {
	this := VersionPackageInfoAssetIndex{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VersionPackageInfoAssetIndex) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionPackageInfoAssetIndex) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VersionPackageInfoAssetIndex) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VersionPackageInfoAssetIndex) SetId(v string) {
	o.Id = &v
}

// GetSha1 returns the Sha1 field value if set, zero value otherwise.
func (o *VersionPackageInfoAssetIndex) GetSha1() string {
	if o == nil || IsNil(o.Sha1) {
		var ret string
		return ret
	}
	return *o.Sha1
}

// GetSha1Ok returns a tuple with the Sha1 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionPackageInfoAssetIndex) GetSha1Ok() (*string, bool) {
	if o == nil || IsNil(o.Sha1) {
		return nil, false
	}
	return o.Sha1, true
}

// HasSha1 returns a boolean if a field has been set.
func (o *VersionPackageInfoAssetIndex) HasSha1() bool {
	if o != nil && !IsNil(o.Sha1) {
		return true
	}

	return false
}

// SetSha1 gets a reference to the given string and assigns it to the Sha1 field.
func (o *VersionPackageInfoAssetIndex) SetSha1(v string) {
	o.Sha1 = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *VersionPackageInfoAssetIndex) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionPackageInfoAssetIndex) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *VersionPackageInfoAssetIndex) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *VersionPackageInfoAssetIndex) SetSize(v int32) {
	o.Size = &v
}

// GetTotalSize returns the TotalSize field value if set, zero value otherwise.
func (o *VersionPackageInfoAssetIndex) GetTotalSize() int32 {
	if o == nil || IsNil(o.TotalSize) {
		var ret int32
		return ret
	}
	return *o.TotalSize
}

// GetTotalSizeOk returns a tuple with the TotalSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionPackageInfoAssetIndex) GetTotalSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSize) {
		return nil, false
	}
	return o.TotalSize, true
}

// HasTotalSize returns a boolean if a field has been set.
func (o *VersionPackageInfoAssetIndex) HasTotalSize() bool {
	if o != nil && !IsNil(o.TotalSize) {
		return true
	}

	return false
}

// SetTotalSize gets a reference to the given int32 and assigns it to the TotalSize field.
func (o *VersionPackageInfoAssetIndex) SetTotalSize(v int32) {
	o.TotalSize = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *VersionPackageInfoAssetIndex) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionPackageInfoAssetIndex) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *VersionPackageInfoAssetIndex) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *VersionPackageInfoAssetIndex) SetUrl(v string) {
	o.Url = &v
}

func (o VersionPackageInfoAssetIndex) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VersionPackageInfoAssetIndex) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Sha1) {
		toSerialize["sha1"] = o.Sha1
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.TotalSize) {
		toSerialize["totalSize"] = o.TotalSize
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableVersionPackageInfoAssetIndex struct {
	value *VersionPackageInfoAssetIndex
	isSet bool
}

func (v NullableVersionPackageInfoAssetIndex) Get() *VersionPackageInfoAssetIndex {
	return v.value
}

func (v *NullableVersionPackageInfoAssetIndex) Set(val *VersionPackageInfoAssetIndex) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionPackageInfoAssetIndex) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionPackageInfoAssetIndex) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionPackageInfoAssetIndex(val *VersionPackageInfoAssetIndex) *NullableVersionPackageInfoAssetIndex {
	return &NullableVersionPackageInfoAssetIndex{value: val, isSet: true}
}

func (v NullableVersionPackageInfoAssetIndex) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionPackageInfoAssetIndex) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


