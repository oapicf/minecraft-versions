/**
 * OpenAPI Sample
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 1.1.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 */


package org.openapitools.server.api

import org.openapitools.server.model.VersionManifest
import org.openapitools.server.model.VersionPackageInfo

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class DefaultApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "DefaultApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val getMinecraftVersionManifestOperation = (apiOperation[VersionManifest]("getMinecraftVersionManifest")
    summary "Get Minecraft version manifest"
    parameters()
  )

  get("/mc/game/version_manifest.json", operation(getMinecraftVersionManifestOperation)) {
  }

  

  val getMinecraftVersionPackageInfoOperation = (apiOperation[VersionPackageInfo]("getMinecraftVersionPackageInfo")
    summary "Get Minecraft version package info"
    parameters(pathParam[String]("packageId").description(""), pathParam[String]("versionId").description(""))
  )

  get("/v1/packages/:packageId/{versionId}.json", operation(getMinecraftVersionPackageInfoOperation)) {
    val packageId = params.getOrElse("packageId", halt(400))
    //println("packageId: " + packageId)
    val versionId = params.getOrElse("versionId", halt(400))
    //println("versionId: " + versionId)
  }

}
