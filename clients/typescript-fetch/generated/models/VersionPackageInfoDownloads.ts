/* tslint:disable */
/* eslint-disable */
/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.12.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Download } from './Download';
import {
    DownloadFromJSON,
    DownloadFromJSONTyped,
    DownloadToJSON,
    DownloadToJSONTyped,
} from './Download';

/**
 * 
 * @export
 * @interface VersionPackageInfoDownloads
 */
export interface VersionPackageInfoDownloads {
    /**
     * 
     * @type {Download}
     * @memberof VersionPackageInfoDownloads
     */
    client?: Download;
    /**
     * 
     * @type {Download}
     * @memberof VersionPackageInfoDownloads
     */
    clientMappings?: Download;
    /**
     * 
     * @type {Download}
     * @memberof VersionPackageInfoDownloads
     */
    server?: Download;
    /**
     * 
     * @type {Download}
     * @memberof VersionPackageInfoDownloads
     */
    serverMappings?: Download;
}

/**
 * Check if a given object implements the VersionPackageInfoDownloads interface.
 */
export function instanceOfVersionPackageInfoDownloads(value: object): value is VersionPackageInfoDownloads {
    return true;
}

export function VersionPackageInfoDownloadsFromJSON(json: any): VersionPackageInfoDownloads {
    return VersionPackageInfoDownloadsFromJSONTyped(json, false);
}

export function VersionPackageInfoDownloadsFromJSONTyped(json: any, ignoreDiscriminator: boolean): VersionPackageInfoDownloads {
    if (json == null) {
        return json;
    }
    return {
        
        'client': json['client'] == null ? undefined : DownloadFromJSON(json['client']),
        'clientMappings': json['client_mappings'] == null ? undefined : DownloadFromJSON(json['client_mappings']),
        'server': json['server'] == null ? undefined : DownloadFromJSON(json['server']),
        'serverMappings': json['server_mappings'] == null ? undefined : DownloadFromJSON(json['server_mappings']),
    };
}

  export function VersionPackageInfoDownloadsToJSON(json: any): VersionPackageInfoDownloads {
      return VersionPackageInfoDownloadsToJSONTyped(json, false);
  }

  export function VersionPackageInfoDownloadsToJSONTyped(value?: VersionPackageInfoDownloads | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'client': DownloadToJSON(value['client']),
        'client_mappings': DownloadToJSON(value['clientMappings']),
        'server': DownloadToJSON(value['server']),
        'server_mappings': DownloadToJSON(value['serverMappings']),
    };
}

