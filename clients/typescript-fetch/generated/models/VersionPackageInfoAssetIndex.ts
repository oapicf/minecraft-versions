/* tslint:disable */
/* eslint-disable */
/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.12.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface VersionPackageInfoAssetIndex
 */
export interface VersionPackageInfoAssetIndex {
    /**
     * 
     * @type {string}
     * @memberof VersionPackageInfoAssetIndex
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof VersionPackageInfoAssetIndex
     */
    sha1?: string;
    /**
     * 
     * @type {number}
     * @memberof VersionPackageInfoAssetIndex
     */
    size?: number;
    /**
     * 
     * @type {number}
     * @memberof VersionPackageInfoAssetIndex
     */
    totalSize?: number;
    /**
     * 
     * @type {string}
     * @memberof VersionPackageInfoAssetIndex
     */
    url?: string;
}

/**
 * Check if a given object implements the VersionPackageInfoAssetIndex interface.
 */
export function instanceOfVersionPackageInfoAssetIndex(value: object): value is VersionPackageInfoAssetIndex {
    return true;
}

export function VersionPackageInfoAssetIndexFromJSON(json: any): VersionPackageInfoAssetIndex {
    return VersionPackageInfoAssetIndexFromJSONTyped(json, false);
}

export function VersionPackageInfoAssetIndexFromJSONTyped(json: any, ignoreDiscriminator: boolean): VersionPackageInfoAssetIndex {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'sha1': json['sha1'] == null ? undefined : json['sha1'],
        'size': json['size'] == null ? undefined : json['size'],
        'totalSize': json['totalSize'] == null ? undefined : json['totalSize'],
        'url': json['url'] == null ? undefined : json['url'],
    };
}

  export function VersionPackageInfoAssetIndexToJSON(json: any): VersionPackageInfoAssetIndex {
      return VersionPackageInfoAssetIndexToJSONTyped(json, false);
  }

  export function VersionPackageInfoAssetIndexToJSONTyped(value?: VersionPackageInfoAssetIndex | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'sha1': value['sha1'],
        'size': value['size'],
        'totalSize': value['totalSize'],
        'url': value['url'],
    };
}

