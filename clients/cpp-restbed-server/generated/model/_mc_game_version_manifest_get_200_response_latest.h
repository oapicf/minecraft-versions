/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.6.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * _mc_game_version_manifest_get_200_response_latest.h
 *
 * 
 */

#ifndef _mc_game_version_manifest_get_200_response_latest_H_
#define _mc_game_version_manifest_get_200_response_latest_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  _mc_game_version_manifest_get_200_response_latest 
{
public:
    _mc_game_version_manifest_get_200_response_latest() = default;
    explicit _mc_game_version_manifest_get_200_response_latest(boost::property_tree::ptree const& pt);
    virtual ~_mc_game_version_manifest_get_200_response_latest() = default;

    _mc_game_version_manifest_get_200_response_latest(const _mc_game_version_manifest_get_200_response_latest& other) = default; // copy constructor
    _mc_game_version_manifest_get_200_response_latest(_mc_game_version_manifest_get_200_response_latest&& other) noexcept = default; // move constructor

    _mc_game_version_manifest_get_200_response_latest& operator=(const _mc_game_version_manifest_get_200_response_latest& other) = default; // copy assignment
    _mc_game_version_manifest_get_200_response_latest& operator=(_mc_game_version_manifest_get_200_response_latest&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// _mc_game_version_manifest_get_200_response_latest members

    /// <summary>
    /// 
    /// </summary>
    std::string getRelease() const;
    void setRelease(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getSnapshot() const;
    void setSnapshot(std::string value);

protected:
    std::string m_Release = "";
    std::string m_Snapshot = "";
};

std::vector<_mc_game_version_manifest_get_200_response_latest> create_mc_game_version_manifest_get_200_response_latestVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<_mc_game_version_manifest_get_200_response_latest>(const _mc_game_version_manifest_get_200_response_latest& val) {
    return val.toPropertyTree();
}

template<>
inline _mc_game_version_manifest_get_200_response_latest fromPt<_mc_game_version_manifest_get_200_response_latest>(const boost::property_tree::ptree& pt) {
    _mc_game_version_manifest_get_200_response_latest ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* _mc_game_version_manifest_get_200_response_latest_H_ */
