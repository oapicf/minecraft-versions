/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.6.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * _v1_packages__packageId___versionId__json_get_200_response_downloads.h
 *
 * 
 */

#ifndef _v1_packages__packageId___versionId__json_get_200_response_downloads_H_
#define _v1_packages__packageId___versionId__json_get_200_response_downloads_H_



#include "_v1_packages__packageId___versionId__json_get_200_response_downloads_client.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  _v1_packages__packageId___versionId__json_get_200_response_downloads 
{
public:
    _v1_packages__packageId___versionId__json_get_200_response_downloads() = default;
    explicit _v1_packages__packageId___versionId__json_get_200_response_downloads(boost::property_tree::ptree const& pt);
    virtual ~_v1_packages__packageId___versionId__json_get_200_response_downloads() = default;

    _v1_packages__packageId___versionId__json_get_200_response_downloads(const _v1_packages__packageId___versionId__json_get_200_response_downloads& other) = default; // copy constructor
    _v1_packages__packageId___versionId__json_get_200_response_downloads(_v1_packages__packageId___versionId__json_get_200_response_downloads&& other) noexcept = default; // move constructor

    _v1_packages__packageId___versionId__json_get_200_response_downloads& operator=(const _v1_packages__packageId___versionId__json_get_200_response_downloads& other) = default; // copy assignment
    _v1_packages__packageId___versionId__json_get_200_response_downloads& operator=(_v1_packages__packageId___versionId__json_get_200_response_downloads&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// _v1_packages__packageId___versionId__json_get_200_response_downloads members

    /// <summary>
    /// 
    /// </summary>
    _v1_packages__packageId___versionId__json_get_200_response_downloads_client getClient() const;
    void setClient(_v1_packages__packageId___versionId__json_get_200_response_downloads_client value);

    /// <summary>
    /// 
    /// </summary>
    _v1_packages__packageId___versionId__json_get_200_response_downloads_client getClientMappings() const;
    void setClientMappings(_v1_packages__packageId___versionId__json_get_200_response_downloads_client value);

    /// <summary>
    /// 
    /// </summary>
    _v1_packages__packageId___versionId__json_get_200_response_downloads_client getServer() const;
    void setServer(_v1_packages__packageId___versionId__json_get_200_response_downloads_client value);

    /// <summary>
    /// 
    /// </summary>
    _v1_packages__packageId___versionId__json_get_200_response_downloads_client getServerMappings() const;
    void setServerMappings(_v1_packages__packageId___versionId__json_get_200_response_downloads_client value);

protected:
    _v1_packages__packageId___versionId__json_get_200_response_downloads_client m_Client;
    _v1_packages__packageId___versionId__json_get_200_response_downloads_client m_Client_mappings;
    _v1_packages__packageId___versionId__json_get_200_response_downloads_client m_Server;
    _v1_packages__packageId___versionId__json_get_200_response_downloads_client m_Server_mappings;
};

std::vector<_v1_packages__packageId___versionId__json_get_200_response_downloads> create_v1_packages__packageId___versionId__json_get_200_response_downloadsVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<_v1_packages__packageId___versionId__json_get_200_response_downloads>(const _v1_packages__packageId___versionId__json_get_200_response_downloads& val) {
    return val.toPropertyTree();
}

template<>
inline _v1_packages__packageId___versionId__json_get_200_response_downloads fromPt<_v1_packages__packageId___versionId__json_get_200_response_downloads>(const boost::property_tree::ptree& pt) {
    _v1_packages__packageId___versionId__json_get_200_response_downloads ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* _v1_packages__packageId___versionId__json_get_200_response_downloads_H_ */
