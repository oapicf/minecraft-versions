/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.6.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * _v1_packages__packageId___versionId__json_get_200_response_javaVersion.h
 *
 * 
 */

#ifndef _v1_packages__packageId___versionId__json_get_200_response_javaVersion_H_
#define _v1_packages__packageId___versionId__json_get_200_response_javaVersion_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>
#include "helpers.h"

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  _v1_packages__packageId___versionId__json_get_200_response_javaVersion 
{
public:
    _v1_packages__packageId___versionId__json_get_200_response_javaVersion() = default;
    explicit _v1_packages__packageId___versionId__json_get_200_response_javaVersion(boost::property_tree::ptree const& pt);
    virtual ~_v1_packages__packageId___versionId__json_get_200_response_javaVersion() = default;

    _v1_packages__packageId___versionId__json_get_200_response_javaVersion(const _v1_packages__packageId___versionId__json_get_200_response_javaVersion& other) = default; // copy constructor
    _v1_packages__packageId___versionId__json_get_200_response_javaVersion(_v1_packages__packageId___versionId__json_get_200_response_javaVersion&& other) noexcept = default; // move constructor

    _v1_packages__packageId___versionId__json_get_200_response_javaVersion& operator=(const _v1_packages__packageId___versionId__json_get_200_response_javaVersion& other) = default; // copy assignment
    _v1_packages__packageId___versionId__json_get_200_response_javaVersion& operator=(_v1_packages__packageId___versionId__json_get_200_response_javaVersion&& other) noexcept = default; // move assignment

    std::string toJsonString(bool prettyJson = false) const;
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree() const;
    void fromPropertyTree(boost::property_tree::ptree const& pt);


    /////////////////////////////////////////////
    /// _v1_packages__packageId___versionId__json_get_200_response_javaVersion members

    /// <summary>
    /// 
    /// </summary>
    std::string getComponent() const;
    void setComponent(std::string value);

    /// <summary>
    /// 
    /// </summary>
    int32_t getMajorVersion() const;
    void setMajorVersion(int32_t value);

protected:
    std::string m_Component = "";
    int32_t m_MajorVersion = 0;
};

std::vector<_v1_packages__packageId___versionId__json_get_200_response_javaVersion> create_v1_packages__packageId___versionId__json_get_200_response_javaVersionVectorFromJsonString(const std::string& json);

template<>
inline boost::property_tree::ptree toPt<_v1_packages__packageId___versionId__json_get_200_response_javaVersion>(const _v1_packages__packageId___versionId__json_get_200_response_javaVersion& val) {
    return val.toPropertyTree();
}

template<>
inline _v1_packages__packageId___versionId__json_get_200_response_javaVersion fromPt<_v1_packages__packageId___versionId__json_get_200_response_javaVersion>(const boost::property_tree::ptree& pt) {
    _v1_packages__packageId___versionId__json_get_200_response_javaVersion ret;
    ret.fromPropertyTree(pt);
    return ret;
}

}
}
}
}

#endif /* _v1_packages__packageId___versionId__json_get_200_response_javaVersion_H_ */
