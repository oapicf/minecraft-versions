/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class VersionPackageInfoJavaVersion {
  
  @SerializedName("component")
  private String component = null;
  @SerializedName("majorVersion")
  private Integer majorVersion = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public String getComponent() {
    return component;
  }
  public void setComponent(String component) {
    this.component = component;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Integer getMajorVersion() {
    return majorVersion;
  }
  public void setMajorVersion(Integer majorVersion) {
    this.majorVersion = majorVersion;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionPackageInfoJavaVersion versionPackageInfoJavaVersion = (VersionPackageInfoJavaVersion) o;
    return (this.component == null ? versionPackageInfoJavaVersion.component == null : this.component.equals(versionPackageInfoJavaVersion.component)) &&
        (this.majorVersion == null ? versionPackageInfoJavaVersion.majorVersion == null : this.majorVersion.equals(versionPackageInfoJavaVersion.majorVersion));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.component == null ? 0: this.component.hashCode());
    result = 31 * result + (this.majorVersion == null ? 0: this.majorVersion.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionPackageInfoJavaVersion {\n");
    
    sb.append("  component: ").append(component).append("\n");
    sb.append("  majorVersion: ").append(majorVersion).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
