/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 1.1.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.client.model;

import java.util.*;
import org.openapitools.client.model.Version;
import org.openapitools.client.model.VersionManifestLatest;
import io.swagger.annotations.*;
import com.google.gson.annotations.SerializedName;

@ApiModel(description = "")
public class VersionManifest {
  
  @SerializedName("latest")
  private VersionManifestLatest latest = null;
  @SerializedName("versions")
  private List<Version> versions = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public VersionManifestLatest getLatest() {
    return latest;
  }
  public void setLatest(VersionManifestLatest latest) {
    this.latest = latest;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public List<Version> getVersions() {
    return versions;
  }
  public void setVersions(List<Version> versions) {
    this.versions = versions;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VersionManifest versionManifest = (VersionManifest) o;
    return (this.latest == null ? versionManifest.latest == null : this.latest.equals(versionManifest.latest)) &&
        (this.versions == null ? versionManifest.versions == null : this.versions.equals(versionManifest.versions));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.latest == null ? 0: this.latest.hashCode());
    result = 31 * result + (this.versions == null ? 0: this.versions.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class VersionManifest {\n");
    
    sb.append("  latest: ").append(latest).append("\n");
    sb.append("  versions: ").append(versions).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
