/**
* 
* SDK for Minecraft versions info
*
* The version of the OpenAPI document: 0.9.0-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param latest 
 * @param versions 
 */
object McGameVersionManifestGet200Responses : BaseTable<McGameVersionManifestGet200Response>("_mc_game_version_manifest_get_200_response") {
    val latest = long("latest") /* null */

    /**
     * Create an entity of type McGameVersionManifestGet200Response from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = McGameVersionManifestGet200Response(
        latest = McGameVersionManifestGet200ResponseLatests.createEntity(row, withReferences) /* McGameVersionManifestGet200ResponseLatest? */,
        versions = emptyList() /* kotlin.Array<McGameVersionManifestGet200ResponseVersionsInner>? */
    )

    /**
    * Assign all the columns from the entity of type McGameVersionManifestGet200Response to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = McGameVersionManifestGet200Response()
    * database.update(McGameVersionManifestGet200Responses, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: McGameVersionManifestGet200Response) {
        this.apply {
            set(McGameVersionManifestGet200Responses.latest, entity.latest)
        }
    }

}


object McGameVersionManifestGet200ResponseMcGameVersionManifestGet200ResponseVersionsInner : BaseTable<Pair<kotlin.Long, kotlin.Long>>("McGameVersionManifestGet200ResponseMcGameVersionManifestGet200ResponseVersionsInner") {
    val mcGameVersionManifestGet200Response = long("mcGameVersionManifestGet200Response")
    val mcGameVersionManifestGet200ResponseVersionsInner = long("mcGameVersionManifestGet200ResponseVersionsInner")

    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean): Pair<kotlin.Long, kotlin.Long> =
        Pair(row[mcGameVersionManifestGet200Response] ?: 0, row[mcGameVersionManifestGet200ResponseVersionsInner] ?: 0)

    fun AssignmentsBuilder.assignFrom(entity: Pair<kotlin.Long, kotlin.Long>) {
        this.apply {
            set(McGameVersionManifestGet200ResponseMcGameVersionManifestGet200ResponseVersionsInner.mcGameVersionManifestGet200Response, entity.first)
            set(McGameVersionManifestGet200ResponseMcGameVersionManifestGet200ResponseVersionsInner.mcGameVersionManifestGet200ResponseVersionsInner, entity.second)
        }
    }

}

