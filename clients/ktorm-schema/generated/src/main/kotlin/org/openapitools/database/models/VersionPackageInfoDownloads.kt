/**
* 
* SDK for Minecraft versions info
*
* The version of the OpenAPI document: 1.1.1-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.database.models

import org.ktorm.dsl.*
import org.ktorm.schema.*
import org.ktorm.database.Database
import .*


/**
 * 
 * @param client 
 * @param clientMappings 
 * @param server 
 * @param serverMappings 
 */
object VersionPackageInfoDownloadss : BaseTable<VersionPackageInfoDownloads>("VersionPackageInfo_downloads") {
    val client = long("client") /* null */
    val clientMappings = long("client_mappings") /* null */
    val server = long("server") /* null */
    val serverMappings = long("server_mappings") /* null */

    /**
     * Create an entity of type VersionPackageInfoDownloads from the model
     */
    override fun doCreateEntity(row: QueryRowSet, withReferences: Boolean) = VersionPackageInfoDownloads(
        client = Downloads.createEntity(row, withReferences) /* Download? */,
        clientMappings = Downloads.createEntity(row, withReferences) /* Download? */,
        server = Downloads.createEntity(row, withReferences) /* Download? */,
        serverMappings = Downloads.createEntity(row, withReferences) /* Download? */
    )

    /**
    * Assign all the columns from the entity of type VersionPackageInfoDownloads to the DML expression.
    *
    * Usage:
    *
    * ```kotlin
    * let entity = VersionPackageInfoDownloads()
    * database.update(VersionPackageInfoDownloadss, {
    *     assignFrom(entity)
    * })
    * ```
    * @return the builder with the columns for the update or insert.
    */
    fun AssignmentsBuilder.assignFrom(entity: VersionPackageInfoDownloads) {
        this.apply {
            set(VersionPackageInfoDownloadss.client, entity.client)
            set(VersionPackageInfoDownloadss.clientMappings, entity.clientMappings)
            set(VersionPackageInfoDownloadss.server, entity.server)
            set(VersionPackageInfoDownloadss.serverMappings, entity.serverMappings)
        }
    }

}


