// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * SDK for Minecraft versions info
 *
 * API version: 1.1.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 */

package openapi

import (
	"net/http"
	"strings"

	"github.com/gorilla/mux"
)

// DefaultAPIController binds http requests to an api service and writes the service results to the http response
type DefaultAPIController struct {
	service DefaultAPIServicer
	errorHandler ErrorHandler
}

// DefaultAPIOption for how the controller is set up.
type DefaultAPIOption func(*DefaultAPIController)

// WithDefaultAPIErrorHandler inject ErrorHandler into controller
func WithDefaultAPIErrorHandler(h ErrorHandler) DefaultAPIOption {
	return func(c *DefaultAPIController) {
		c.errorHandler = h
	}
}

// NewDefaultAPIController creates a default api controller
func NewDefaultAPIController(s DefaultAPIServicer, opts ...DefaultAPIOption) *DefaultAPIController {
	controller := &DefaultAPIController{
		service:      s,
		errorHandler: DefaultErrorHandler,
	}

	for _, opt := range opts {
		opt(controller)
	}

	return controller
}

// Routes returns all the api routes for the DefaultAPIController
func (c *DefaultAPIController) Routes() Routes {
	return Routes{
		"GetMinecraftVersionManifest": Route{
			strings.ToUpper("Get"),
			"/mc/game/version_manifest.json",
			c.GetMinecraftVersionManifest,
		},
		"GetMinecraftVersionPackageInfo": Route{
			strings.ToUpper("Get"),
			"/v1/packages/{packageId}/{versionId}.json",
			c.GetMinecraftVersionPackageInfo,
		},
	}
}

// GetMinecraftVersionManifest - Get Minecraft version manifest
func (c *DefaultAPIController) GetMinecraftVersionManifest(w http.ResponseWriter, r *http.Request) {
	result, err := c.service.GetMinecraftVersionManifest(r.Context())
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	_ = EncodeJSONResponse(result.Body, &result.Code, w)
}

// GetMinecraftVersionPackageInfo - Get Minecraft version package info
func (c *DefaultAPIController) GetMinecraftVersionPackageInfo(w http.ResponseWriter, r *http.Request) {
	params := mux.Vars(r)
	packageIdParam := params["packageId"]
	if packageIdParam == "" {
		c.errorHandler(w, r, &RequiredError{"packageId"}, nil)
		return
	}
	versionIdParam := params["versionId"]
	if versionIdParam == "" {
		c.errorHandler(w, r, &RequiredError{"versionId"}, nil)
		return
	}
	result, err := c.service.GetMinecraftVersionPackageInfo(r.Context(), packageIdParam, versionIdParam)
	// If an error occurred, encode the error with the status code
	if err != nil {
		c.errorHandler(w, r, err, &result)
		return
	}
	// If no error, encode the body and the result code
	_ = EncodeJSONResponse(result.Body, &result.Code, w)
}
