<?php

/**
 * PHP version 7.4
 *
 * @package OpenAPIServer
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 */

/**
 * SDK for Minecraft versions info
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Please update the test case below to test the model.
 */
namespace OpenAPIServer\Model;

use PHPUnit\Framework\TestCase;
use OpenAPIServer\Model\V1PackagesPackageIdVersionIdJsonGet200Response;

/**
 * V1PackagesPackageIdVersionIdJsonGet200ResponseTest Class Doc Comment
 *
 * @package OpenAPIServer\Model
 * @author  OpenAPI Generator team
 * @link    https://github.com/openapitools/openapi-generator
 *
 * @coversDefaultClass \OpenAPIServer\Model\V1PackagesPackageIdVersionIdJsonGet200Response
 */
class V1PackagesPackageIdVersionIdJsonGet200ResponseTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "V1PackagesPackageIdVersionIdJsonGet200Response"
     */
    public function testV1PackagesPackageIdVersionIdJsonGet200Response()
    {
        $testV1PackagesPackageIdVersionIdJsonGet200Response = new V1PackagesPackageIdVersionIdJsonGet200Response();
        $namespacedClassname = V1PackagesPackageIdVersionIdJsonGet200Response::getModelsNamespace() . '\\V1PackagesPackageIdVersionIdJsonGet200Response';
        $this->assertSame('\\' . V1PackagesPackageIdVersionIdJsonGet200Response::class, $namespacedClassname);
        $this->assertTrue(
            class_exists($namespacedClassname),
            sprintf('Assertion failed that "%s" class exists', $namespacedClassname)
        );
        self::markTestIncomplete(
            'Test of "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "version"
     */
    public function testPropertyVersion()
    {
        self::markTestIncomplete(
            'Test of "version" property in "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "assetIndex"
     */
    public function testPropertyAssetIndex()
    {
        self::markTestIncomplete(
            'Test of "assetIndex" property in "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "assets"
     */
    public function testPropertyAssets()
    {
        self::markTestIncomplete(
            'Test of "assets" property in "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "complianceLevel"
     */
    public function testPropertyComplianceLevel()
    {
        self::markTestIncomplete(
            'Test of "complianceLevel" property in "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "downloads"
     */
    public function testPropertyDownloads()
    {
        self::markTestIncomplete(
            'Test of "downloads" property in "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "id"
     */
    public function testPropertyId()
    {
        self::markTestIncomplete(
            'Test of "id" property in "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "javaVersion"
     */
    public function testPropertyJavaVersion()
    {
        self::markTestIncomplete(
            'Test of "javaVersion" property in "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "mainClass"
     */
    public function testPropertyMainClass()
    {
        self::markTestIncomplete(
            'Test of "mainClass" property in "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "minimumLauncherVersion"
     */
    public function testPropertyMinimumLauncherVersion()
    {
        self::markTestIncomplete(
            'Test of "minimumLauncherVersion" property in "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "time"
     */
    public function testPropertyTime()
    {
        self::markTestIncomplete(
            'Test of "time" property in "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "releaseTime"
     */
    public function testPropertyReleaseTime()
    {
        self::markTestIncomplete(
            'Test of "releaseTime" property in "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test attribute "type"
     */
    public function testPropertyType()
    {
        self::markTestIncomplete(
            'Test of "type" property in "V1PackagesPackageIdVersionIdJsonGet200Response" model has not been implemented yet.'
        );
    }

    /**
     * Test getOpenApiSchema static method
     * @covers ::getOpenApiSchema
     */
    public function testGetOpenApiSchema()
    {
        $schemaArr = V1PackagesPackageIdVersionIdJsonGet200Response::getOpenApiSchema();
        $this->assertIsArray($schemaArr);
    }
}

