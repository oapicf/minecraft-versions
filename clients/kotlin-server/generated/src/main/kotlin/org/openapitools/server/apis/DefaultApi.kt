/**
* 
* SDK for Minecraft versions info
*
* The version of the OpenAPI document: 0.9.0-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
package org.openapitools.server.apis

import com.google.gson.Gson
import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.auth.*
import io.ktor.server.response.*
import org.openapitools.server.Paths
import io.ktor.server.resources.options
import io.ktor.server.resources.get
import io.ktor.server.resources.post
import io.ktor.server.resources.put
import io.ktor.server.resources.delete
import io.ktor.server.resources.head
import io.ktor.server.resources.patch
import io.ktor.server.routing.*
import org.openapitools.server.infrastructure.ApiPrincipal
import org.openapitools.server.models.GetMinecraftVersionManifest200Response
import org.openapitools.server.models.V1PackagesPackageIdVersionIdJsonGet200Response

fun Route.DefaultApi() {
    val gson = Gson()
    val empty = mutableMapOf<String, Any?>()

    get<Paths.getMinecraftVersionManifest> {
        val exampleContentType = "application/json"
        val exampleContentString = """{
          "versions" : [ {
            "releaseTime" : "2024-04-01T11:07:19Z",
            "id" : "24w14potato",
            "time" : "2024-04-01T11:14:41Z",
            "type" : "snapshot",
            "url" : "https://piston-meta.mojang.com/v1/packages/21df7f4ba484a6437ab5e9dca0b4dfb5dcefc802/24w14potato.json"
          }, {
            "releaseTime" : "2024-04-01T11:07:19Z",
            "id" : "24w14potato",
            "time" : "2024-04-01T11:14:41Z",
            "type" : "snapshot",
            "url" : "https://piston-meta.mojang.com/v1/packages/21df7f4ba484a6437ab5e9dca0b4dfb5dcefc802/24w14potato.json"
          } ],
          "latest" : {
            "release" : "1.21",
            "snapshot" : "24w14potato"
          }
        }"""
        
        when (exampleContentType) {
            "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
            "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
            else -> call.respondText(exampleContentString)
        }
        
    }

    get<Paths.v1PackagesPackageIdVersionIdJsonGet> {
        val exampleContentType = "application/json"
        val exampleContentString = """{
          "assets" : 1,
          "releaseTime" : "2024-04-01T11:07:19Z",
          "mainClass" : "net.minecraft.client.main.Main",
          "downloads" : {
            "server" : {
              "sha1" : "sha1",
              "size" : 5,
              "url" : "url"
            },
            "server_mappings" : {
              "sha1" : "sha1",
              "size" : 5,
              "url" : "url"
            },
            "client" : {
              "sha1" : "sha1",
              "size" : 5,
              "url" : "url"
            },
            "client_mappings" : {
              "sha1" : "sha1",
              "size" : 5,
              "url" : "url"
            }
          },
          "javaVersion" : {
            "component" : "component",
            "majorVersion" : 2
          },
          "complianceLevel" : 5,
          "minimumLauncherVersion" : 21,
          "assetIndex" : {
            "sha1" : "sha1",
            "totalSize" : 6,
            "size" : 0,
            "id" : "id",
            "url" : "url"
          },
          "id" : "id",
          "time" : "2024-04-01T11:14:41Z",
          "type" : "snapshot",
          "version" : "version"
        }"""
        
        when (exampleContentType) {
            "application/json" -> call.respond(gson.fromJson(exampleContentString, empty::class.java))
            "application/xml" -> call.respondText(exampleContentString, ContentType.Text.Xml)
            else -> call.respondText(exampleContentString)
        }
        
    }

}
