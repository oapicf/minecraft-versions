package org.openapitools.client.api

import argonaut._
import argonaut.EncodeJson._
import argonaut.DecodeJson._

import org.http4s.{EntityDecoder, EntityEncoder}
import org.http4s.argonaut._
import org.joda.time.DateTime


import V1PackagesPackageIdVersionIdJsonGet200ResponseJavaVersion._

case class V1PackagesPackageIdVersionIdJsonGet200ResponseJavaVersion (
  component: Option[String],
majorVersion: Option[Integer])

object V1PackagesPackageIdVersionIdJsonGet200ResponseJavaVersion {
  import DateTimeCodecs._

  implicit val V1PackagesPackageIdVersionIdJsonGet200ResponseJavaVersionCodecJson: CodecJson[V1PackagesPackageIdVersionIdJsonGet200ResponseJavaVersion] = CodecJson.derive[V1PackagesPackageIdVersionIdJsonGet200ResponseJavaVersion]
  implicit val V1PackagesPackageIdVersionIdJsonGet200ResponseJavaVersionDecoder: EntityDecoder[V1PackagesPackageIdVersionIdJsonGet200ResponseJavaVersion] = jsonOf[V1PackagesPackageIdVersionIdJsonGet200ResponseJavaVersion]
  implicit val V1PackagesPackageIdVersionIdJsonGet200ResponseJavaVersionEncoder: EntityEncoder[V1PackagesPackageIdVersionIdJsonGet200ResponseJavaVersion] = jsonEncoderOf[V1PackagesPackageIdVersionIdJsonGet200ResponseJavaVersion]
}
