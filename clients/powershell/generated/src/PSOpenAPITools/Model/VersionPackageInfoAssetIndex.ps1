#
# SDK for Minecraft versions info
# Version: 0.12.1-pre.0
# Contact: blah+oapicf@cliffano.com
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER Id
No description available.
.PARAMETER Sha1
No description available.
.PARAMETER Size
No description available.
.PARAMETER TotalSize
No description available.
.PARAMETER Url
No description available.
.OUTPUTS

VersionPackageInfoAssetIndex<PSCustomObject>
#>

function Initialize-VersionPackageInfoAssetIndex {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Id},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Sha1},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${Size},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${TotalSize},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Url}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => VersionPackageInfoAssetIndex' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "sha1" = ${Sha1}
            "size" = ${Size}
            "totalSize" = ${TotalSize}
            "url" = ${Url}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to VersionPackageInfoAssetIndex<PSCustomObject>

.DESCRIPTION

Convert from JSON to VersionPackageInfoAssetIndex<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

VersionPackageInfoAssetIndex<PSCustomObject>
#>
function ConvertFrom-JsonToVersionPackageInfoAssetIndex {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => VersionPackageInfoAssetIndex' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in VersionPackageInfoAssetIndex
        $AllProperties = ("id", "sha1", "size", "totalSize", "url")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "id"))) { #optional property not found
            $Id = $null
        } else {
            $Id = $JsonParameters.PSobject.Properties["id"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "sha1"))) { #optional property not found
            $Sha1 = $null
        } else {
            $Sha1 = $JsonParameters.PSobject.Properties["sha1"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "size"))) { #optional property not found
            $Size = $null
        } else {
            $Size = $JsonParameters.PSobject.Properties["size"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "totalSize"))) { #optional property not found
            $TotalSize = $null
        } else {
            $TotalSize = $JsonParameters.PSobject.Properties["totalSize"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "url"))) { #optional property not found
            $Url = $null
        } else {
            $Url = $JsonParameters.PSobject.Properties["url"].value
        }

        $PSO = [PSCustomObject]@{
            "id" = ${Id}
            "sha1" = ${Sha1}
            "size" = ${Size}
            "totalSize" = ${TotalSize}
            "url" = ${Url}
        }

        return $PSO
    }

}

