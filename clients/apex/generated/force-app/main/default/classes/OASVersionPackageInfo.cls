/*
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by the OAS code generator program.
 * https://github.com/OpenAPITools/openapi-generator
 * Do not edit the class manually.
 */

/**
 * OASVersionPackageInfo
 */
public class OASVersionPackageInfo implements OAS.MappedProperties {
    /**
     * Get version
     * @return version
     */
    public String version { get; set; }

    /**
     * Get assetIndex
     * @return assetIndex
     */
    public OASVersionPackageInfoAssetIndex assetIndex { get; set; }

    /**
     * Get assets
     * @return assets
     */
    public String assets { get; set; }

    /**
     * Get complianceLevel
     * @return complianceLevel
     */
    public Integer complianceLevel { get; set; }

    /**
     * Get downloads
     * @return downloads
     */
    public OASVersionPackageInfoDownloads downloads { get; set; }

    /**
     * Get id
     * @return id
     */
    public String id { get; set; }

    /**
     * Get javaVersion
     * @return javaVersion
     */
    public OASVersionPackageInfoJavaVersion javaVersion { get; set; }

    /**
     * Get mainClass
     * @return mainClass
     */
    public String mainClass { get; set; }

    /**
     * Get minimumLauncherVersion
     * @return minimumLauncherVersion
     */
    public Integer minimumLauncherVersion { get; set; }

    /**
     * Get r_time
     * @return r_time
     */
    public Datetime r_time { get; set; }

    /**
     * Get releaseTime
     * @return releaseTime
     */
    public Datetime releaseTime { get; set; }

    /**
     * Get type
     * @return type
     */
    public String type { get; set; }

    private static final Map<String, String> propertyMappings = new Map<String, String>{
        'time' => 'r_time'
    };

    public Map<String, String> getPropertyMappings() {
        return propertyMappings;
    }

    public static OASVersionPackageInfo getExample() {
        OASVersionPackageInfo versionPackageInfo = new OASVersionPackageInfo();
          versionPackageInfo.version = '';
          versionPackageInfo.assetIndex = OASVersionPackageInfoAssetIndex.getExample();
          versionPackageInfo.assets = '';
          versionPackageInfo.complianceLevel = 0;
          versionPackageInfo.downloads = OASVersionPackageInfoDownloads.getExample();
          versionPackageInfo.id = '';
          versionPackageInfo.javaVersion = OASVersionPackageInfoJavaVersion.getExample();
          versionPackageInfo.mainClass = 'net.minecraft.client.main.Main';
          versionPackageInfo.minimumLauncherVersion = 21;
          versionPackageInfo.r_time = Datetime.newInstanceGmt(2024, 4, 1, 11, 14, 41);
          versionPackageInfo.releaseTime = Datetime.newInstanceGmt(2024, 4, 1, 11, 7, 19);
          versionPackageInfo.type = 'snapshot';
        return versionPackageInfo;
    }

    public Boolean equals(Object obj) {
        if (obj instanceof OASVersionPackageInfo) {           
            OASVersionPackageInfo versionPackageInfo = (OASVersionPackageInfo) obj;
            return this.version == versionPackageInfo.version
                && this.assetIndex == versionPackageInfo.assetIndex
                && this.assets == versionPackageInfo.assets
                && this.complianceLevel == versionPackageInfo.complianceLevel
                && this.downloads == versionPackageInfo.downloads
                && this.id == versionPackageInfo.id
                && this.javaVersion == versionPackageInfo.javaVersion
                && this.mainClass == versionPackageInfo.mainClass
                && this.minimumLauncherVersion == versionPackageInfo.minimumLauncherVersion
                && this.r_time == versionPackageInfo.r_time
                && this.releaseTime == versionPackageInfo.releaseTime
                && this.type == versionPackageInfo.type;
        }
        return false;
    }

    public Integer hashCode() {
        Integer hashCode = 43;
        hashCode = (17 * hashCode) + (version == null ? 0 : System.hashCode(version));
        hashCode = (17 * hashCode) + (assetIndex == null ? 0 : System.hashCode(assetIndex));
        hashCode = (17 * hashCode) + (assets == null ? 0 : System.hashCode(assets));
        hashCode = (17 * hashCode) + (complianceLevel == null ? 0 : System.hashCode(complianceLevel));
        hashCode = (17 * hashCode) + (downloads == null ? 0 : System.hashCode(downloads));
        hashCode = (17 * hashCode) + (id == null ? 0 : System.hashCode(id));
        hashCode = (17 * hashCode) + (javaVersion == null ? 0 : System.hashCode(javaVersion));
        hashCode = (17 * hashCode) + (mainClass == null ? 0 : System.hashCode(mainClass));
        hashCode = (17 * hashCode) + (minimumLauncherVersion == null ? 0 : System.hashCode(minimumLauncherVersion));
        hashCode = (17 * hashCode) + (r_time == null ? 0 : System.hashCode(r_time));
        hashCode = (17 * hashCode) + (releaseTime == null ? 0 : System.hashCode(releaseTime));
        hashCode = (17 * hashCode) + (type == null ? 0 : System.hashCode(type));
        return hashCode;
    }
}

