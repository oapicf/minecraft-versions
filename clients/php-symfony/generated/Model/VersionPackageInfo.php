<?php
/**
 * VersionPackageInfo
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 1.1.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the VersionPackageInfo model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class VersionPackageInfo 
{
        /**
     * @var string|null
     * @SerializedName("version")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $version = null;

    /**
     * @var VersionPackageInfoAssetIndex|null
     * @SerializedName("assetIndex")
     * @Type("OpenAPI\Server\Model\VersionPackageInfoAssetIndex")
    */
    #[Assert\Type("OpenAPI\Server\Model\VersionPackageInfoAssetIndex")]
    protected ?VersionPackageInfoAssetIndex $assetIndex = null;

    /**
     * @var string|null
     * @SerializedName("assets")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $assets = null;

    /**
     * @var int|null
     * @SerializedName("complianceLevel")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $complianceLevel = null;

    /**
     * @var VersionPackageInfoDownloads|null
     * @SerializedName("downloads")
     * @Type("OpenAPI\Server\Model\VersionPackageInfoDownloads")
    */
    #[Assert\Type("OpenAPI\Server\Model\VersionPackageInfoDownloads")]
    protected ?VersionPackageInfoDownloads $downloads = null;

    /**
     * @var string|null
     * @SerializedName("id")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $id = null;

    /**
     * @var VersionPackageInfoJavaVersion|null
     * @SerializedName("javaVersion")
     * @Type("OpenAPI\Server\Model\VersionPackageInfoJavaVersion")
    */
    #[Assert\Type("OpenAPI\Server\Model\VersionPackageInfoJavaVersion")]
    protected ?VersionPackageInfoJavaVersion $javaVersion = null;

    /**
     * @var string|null
     * @SerializedName("mainClass")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $mainClass = null;

    /**
     * @var int|null
     * @SerializedName("minimumLauncherVersion")
     * @Type("int")
    */
    #[Assert\Type("int")]
    protected ?int $minimumLauncherVersion = null;

    /**
     * @var \DateTime|null
     * @SerializedName("time")
     * @Type("DateTime")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $time = null;

    /**
     * @var \DateTime|null
     * @SerializedName("releaseTime")
     * @Type("DateTime")
    */
    #[Assert\Type("\DateTime")]
    protected ?\DateTime $releaseTime = null;

    /**
     * @var string|null
     * @SerializedName("type")
     * @Type("string")
    */
    #[Assert\Type("string")]
    protected ?string $type = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(?array $data = null)
    {
        if (is_array($data)) {
            $this->version = array_key_exists('version', $data) ? $data['version'] : $this->version;
            $this->assetIndex = array_key_exists('assetIndex', $data) ? $data['assetIndex'] : $this->assetIndex;
            $this->assets = array_key_exists('assets', $data) ? $data['assets'] : $this->assets;
            $this->complianceLevel = array_key_exists('complianceLevel', $data) ? $data['complianceLevel'] : $this->complianceLevel;
            $this->downloads = array_key_exists('downloads', $data) ? $data['downloads'] : $this->downloads;
            $this->id = array_key_exists('id', $data) ? $data['id'] : $this->id;
            $this->javaVersion = array_key_exists('javaVersion', $data) ? $data['javaVersion'] : $this->javaVersion;
            $this->mainClass = array_key_exists('mainClass', $data) ? $data['mainClass'] : $this->mainClass;
            $this->minimumLauncherVersion = array_key_exists('minimumLauncherVersion', $data) ? $data['minimumLauncherVersion'] : $this->minimumLauncherVersion;
            $this->time = array_key_exists('time', $data) ? $data['time'] : $this->time;
            $this->releaseTime = array_key_exists('releaseTime', $data) ? $data['releaseTime'] : $this->releaseTime;
            $this->type = array_key_exists('type', $data) ? $data['type'] : $this->type;
        }
    }

    /**
     * Gets version.
     *
     * @return string|null
     */
    public function getVersion(): ?string
    {
        return $this->version;
    }

    /**
    * Sets version.
    *
    * @param string|null $version
    *
    * @return $this
    */
    public function setVersion(?string $version = null): self
    {
        $this->version = $version;

        return $this;
    }




    /**
     * Gets assetIndex.
     *
     * @return VersionPackageInfoAssetIndex|null
     */
    public function getAssetIndex(): ?VersionPackageInfoAssetIndex
    {
        return $this->assetIndex;
    }

    /**
    * Sets assetIndex.
    *
    * @param VersionPackageInfoAssetIndex|null $assetIndex
    *
    * @return $this
    */
    public function setAssetIndex(?VersionPackageInfoAssetIndex $assetIndex = null): self
    {
        $this->assetIndex = $assetIndex;

        return $this;
    }




    /**
     * Gets assets.
     *
     * @return string|null
     */
    public function getAssets(): ?string
    {
        return $this->assets;
    }

    /**
    * Sets assets.
    *
    * @param string|null $assets
    *
    * @return $this
    */
    public function setAssets(?string $assets = null): self
    {
        $this->assets = $assets;

        return $this;
    }




    /**
     * Gets complianceLevel.
     *
     * @return int|null
     */
    public function getComplianceLevel(): ?int
    {
        return $this->complianceLevel;
    }

    /**
    * Sets complianceLevel.
    *
    * @param int|null $complianceLevel
    *
    * @return $this
    */
    public function setComplianceLevel(?int $complianceLevel = null): self
    {
        $this->complianceLevel = $complianceLevel;

        return $this;
    }




    /**
     * Gets downloads.
     *
     * @return VersionPackageInfoDownloads|null
     */
    public function getDownloads(): ?VersionPackageInfoDownloads
    {
        return $this->downloads;
    }

    /**
    * Sets downloads.
    *
    * @param VersionPackageInfoDownloads|null $downloads
    *
    * @return $this
    */
    public function setDownloads(?VersionPackageInfoDownloads $downloads = null): self
    {
        $this->downloads = $downloads;

        return $this;
    }




    /**
     * Gets id.
     *
     * @return string|null
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
    * Sets id.
    *
    * @param string|null $id
    *
    * @return $this
    */
    public function setId(?string $id = null): self
    {
        $this->id = $id;

        return $this;
    }




    /**
     * Gets javaVersion.
     *
     * @return VersionPackageInfoJavaVersion|null
     */
    public function getJavaVersion(): ?VersionPackageInfoJavaVersion
    {
        return $this->javaVersion;
    }

    /**
    * Sets javaVersion.
    *
    * @param VersionPackageInfoJavaVersion|null $javaVersion
    *
    * @return $this
    */
    public function setJavaVersion(?VersionPackageInfoJavaVersion $javaVersion = null): self
    {
        $this->javaVersion = $javaVersion;

        return $this;
    }




    /**
     * Gets mainClass.
     *
     * @return string|null
     */
    public function getMainClass(): ?string
    {
        return $this->mainClass;
    }

    /**
    * Sets mainClass.
    *
    * @param string|null $mainClass
    *
    * @return $this
    */
    public function setMainClass(?string $mainClass = null): self
    {
        $this->mainClass = $mainClass;

        return $this;
    }




    /**
     * Gets minimumLauncherVersion.
     *
     * @return int|null
     */
    public function getMinimumLauncherVersion(): ?int
    {
        return $this->minimumLauncherVersion;
    }

    /**
    * Sets minimumLauncherVersion.
    *
    * @param int|null $minimumLauncherVersion
    *
    * @return $this
    */
    public function setMinimumLauncherVersion(?int $minimumLauncherVersion = null): self
    {
        $this->minimumLauncherVersion = $minimumLauncherVersion;

        return $this;
    }




    /**
     * Gets time.
     *
     * @return \DateTime|null
     */
    public function getTime(): ?\DateTime
    {
        return $this->time;
    }

    /**
    * Sets time.
    *
    * @param \DateTime|null $time
    *
    * @return $this
    */
    public function setTime(?\DateTime $time = null): self
    {
        $this->time = $time;

        return $this;
    }




    /**
     * Gets releaseTime.
     *
     * @return \DateTime|null
     */
    public function getReleaseTime(): ?\DateTime
    {
        return $this->releaseTime;
    }

    /**
    * Sets releaseTime.
    *
    * @param \DateTime|null $releaseTime
    *
    * @return $this
    */
    public function setReleaseTime(?\DateTime $releaseTime = null): self
    {
        $this->releaseTime = $releaseTime;

        return $this;
    }




    /**
     * Gets type.
     *
     * @return string|null
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
    * Sets type.
    *
    * @param string|null $type
    *
    * @return $this
    */
    public function setType(?string $type = null): self
    {
        $this->type = $type;

        return $this;
    }



}


