<?php
/**
 * VersionPackageInfoDownloads
 *
 * PHP version 8.1.1
 *
 * @category Class
 * @package  OpenAPI\Server\Model
 * @author   OpenAPI Generator team
 * @link     https://github.com/openapitools/openapi-generator
 */

/**
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 *
 */

/**
 * NOTE: This class is auto generated by the openapi generator program.
 * https://github.com/openapitools/openapi-generator
 * Do not edit the class manually.
 */

namespace OpenAPI\Server\Model;

use Symfony\Component\Validator\Constraints as Assert;
use JMS\Serializer\Annotation\Type;
use JMS\Serializer\Annotation\Accessor;
use JMS\Serializer\Annotation\SerializedName;

/**
 * Class representing the VersionPackageInfoDownloads model.
 *
 * @package OpenAPI\Server\Model
 * @author  OpenAPI Generator team
 */

class VersionPackageInfoDownloads 
{
        /**
     * @var Download|null
     * @SerializedName("client")
     * @Assert\Type("OpenAPI\Server\Model\Download")
     * @Type("OpenAPI\Server\Model\Download")
     */
    protected ?Download $client = null;

    /**
     * @var Download|null
     * @SerializedName("client_mappings")
     * @Assert\Type("OpenAPI\Server\Model\Download")
     * @Type("OpenAPI\Server\Model\Download")
     */
    protected ?Download $clientMappings = null;

    /**
     * @var Download|null
     * @SerializedName("server")
     * @Assert\Type("OpenAPI\Server\Model\Download")
     * @Type("OpenAPI\Server\Model\Download")
     */
    protected ?Download $server = null;

    /**
     * @var Download|null
     * @SerializedName("server_mappings")
     * @Assert\Type("OpenAPI\Server\Model\Download")
     * @Type("OpenAPI\Server\Model\Download")
     */
    protected ?Download $serverMappings = null;

    /**
     * Constructor
     * @param array|null $data Associated array of property values initializing the model
     */
    public function __construct(array $data = null)
    {
        if (is_array($data)) {
            $this->client = array_key_exists('client', $data) ? $data['client'] : $this->client;
            $this->clientMappings = array_key_exists('clientMappings', $data) ? $data['clientMappings'] : $this->clientMappings;
            $this->server = array_key_exists('server', $data) ? $data['server'] : $this->server;
            $this->serverMappings = array_key_exists('serverMappings', $data) ? $data['serverMappings'] : $this->serverMappings;
        }
    }

    /**
     * Gets client.
     *
     * @return Download|null
     */
    public function getClient(): ?Download
    {
        return $this->client;
    }



    /**
     * Sets client.
     *
     * @param Download|null $client
     *
     * @return $this
     */
    public function setClient(?Download $client = null): self
    {
        $this->client = $client;

        return $this;
    }

    /**
     * Gets clientMappings.
     *
     * @return Download|null
     */
    public function getClientMappings(): ?Download
    {
        return $this->clientMappings;
    }



    /**
     * Sets clientMappings.
     *
     * @param Download|null $clientMappings
     *
     * @return $this
     */
    public function setClientMappings(?Download $clientMappings = null): self
    {
        $this->clientMappings = $clientMappings;

        return $this;
    }

    /**
     * Gets server.
     *
     * @return Download|null
     */
    public function getServer(): ?Download
    {
        return $this->server;
    }



    /**
     * Sets server.
     *
     * @param Download|null $server
     *
     * @return $this
     */
    public function setServer(?Download $server = null): self
    {
        $this->server = $server;

        return $this;
    }

    /**
     * Gets serverMappings.
     *
     * @return Download|null
     */
    public function getServerMappings(): ?Download
    {
        return $this->serverMappings;
    }



    /**
     * Sets serverMappings.
     *
     * @param Download|null $serverMappings
     *
     * @return $this
     */
    public function setServerMappings(?Download $serverMappings = null): self
    {
        $this->serverMappings = $serverMappings;

        return $this;
    }
}


