/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.6.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * _mc_game_version_manifest_get_200_response_versions_inner.h
 *
 * 
 */

#ifndef _mc_game_version_manifest_get_200_response_versions_inner_H_
#define _mc_game_version_manifest_get_200_response_versions_inner_H_



#include <string>
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  _mc_game_version_manifest_get_200_response_versions_inner 
{
public:
    _mc_game_version_manifest_get_200_response_versions_inner() = default;
    explicit _mc_game_version_manifest_get_200_response_versions_inner(boost::property_tree::ptree const& pt);
    virtual ~_mc_game_version_manifest_get_200_response_versions_inner() = default;

    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// _mc_game_version_manifest_get_200_response_versions_inner members

    /// <summary>
    /// 
    /// </summary>
    std::string getId() const;
    void setId(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getType() const;
    void setType(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getUrl() const;
    void setUrl(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getTime() const;
    void setTime(std::string value);

    /// <summary>
    /// 
    /// </summary>
    std::string getReleaseTime() const;
    void setReleaseTime(std::string value);

protected:
    //////////////////////////////////////
    // Override these for customization //
    //////////////////////////////////////

    virtual std::string toJsonString_internal(bool prettyJson = false);
    virtual void fromJsonString_internal(std::string const& jsonString);
    virtual boost::property_tree::ptree toPropertyTree_internal();
    virtual void fromPropertyTree_internal(boost::property_tree::ptree const& pt);


protected:
    std::string m_Id = "";
    std::string m_Type = "";
    std::string m_Url = "";
    std::string m_Time = "";
    std::string m_ReleaseTime = "";
};

std::vector<_mc_game_version_manifest_get_200_response_versions_inner> create_mc_game_version_manifest_get_200_response_versions_innerVectorFromJsonString(const std::string& json);

}
}
}
}

#endif /* _mc_game_version_manifest_get_200_response_versions_inner_H_ */
