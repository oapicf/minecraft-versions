/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 1.1.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.12.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * VersionPackageInfo_downloads.h
 *
 * 
 */

#ifndef VersionPackageInfo_downloads_H_
#define VersionPackageInfo_downloads_H_



#include "Download.h"
#include <memory>
#include <vector>
#include <boost/property_tree/ptree.hpp>

namespace org {
namespace openapitools {
namespace server {
namespace model {

/// <summary>
/// 
/// </summary>
class  VersionPackageInfo_downloads 
{
public:
    VersionPackageInfo_downloads() = default;
    explicit VersionPackageInfo_downloads(boost::property_tree::ptree const& pt);
    virtual ~VersionPackageInfo_downloads() = default;

    std::string toJsonString(bool prettyJson = false);
    void fromJsonString(std::string const& jsonString);
    boost::property_tree::ptree toPropertyTree();
    void fromPropertyTree(boost::property_tree::ptree const& pt);

    /////////////////////////////////////////////
    /// VersionPackageInfo_downloads members

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Download> getClient() const;
    void setClient(std::shared_ptr<Download> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Download> getClientMappings() const;
    void setClientMappings(std::shared_ptr<Download> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Download> getServer() const;
    void setServer(std::shared_ptr<Download> value);

    /// <summary>
    /// 
    /// </summary>
    std::shared_ptr<Download> getServerMappings() const;
    void setServerMappings(std::shared_ptr<Download> value);

protected:
    //////////////////////////////////////
    // Override these for customization //
    //////////////////////////////////////

    virtual std::string toJsonString_internal(bool prettyJson = false);
    virtual void fromJsonString_internal(std::string const& jsonString);
    virtual boost::property_tree::ptree toPropertyTree_internal();
    virtual void fromPropertyTree_internal(boost::property_tree::ptree const& pt);


protected:
    std::shared_ptr<Download> m_Client;
    std::shared_ptr<Download> m_Client_mappings;
    std::shared_ptr<Download> m_Server;
    std::shared_ptr<Download> m_Server_mappings;
};

std::vector<VersionPackageInfo_downloads> createVersionPackageInfo_downloadsVectorFromJsonString(const std::string& json);

}
}
}
}

#endif /* VersionPackageInfo_downloads_H_ */
