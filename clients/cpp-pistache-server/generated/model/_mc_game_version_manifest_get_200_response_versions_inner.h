/**
* 
* SDK for Minecraft versions info
*
* The version of the OpenAPI document: 0.9.0-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * _mc_game_version_manifest_get_200_response_versions_inner.h
 *
 * 
 */

#ifndef _mc_game_version_manifest_get_200_response_versions_inner_H_
#define _mc_game_version_manifest_get_200_response_versions_inner_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  _mc_game_version_manifest_get_200_response_versions_inner
{
public:
    _mc_game_version_manifest_get_200_response_versions_inner();
    virtual ~_mc_game_version_manifest_get_200_response_versions_inner() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const _mc_game_version_manifest_get_200_response_versions_inner& rhs) const;
    bool operator!=(const _mc_game_version_manifest_get_200_response_versions_inner& rhs) const;

    /////////////////////////////////////////////
    /// _mc_game_version_manifest_get_200_response_versions_inner members

    /// <summary>
    /// 
    /// </summary>
    std::string getId() const;
    void setId(std::string const& value);
    bool idIsSet() const;
    void unsetId();
    /// <summary>
    /// 
    /// </summary>
    std::string getType() const;
    void setType(std::string const& value);
    bool typeIsSet() const;
    void unsetType();
    /// <summary>
    /// 
    /// </summary>
    std::string getUrl() const;
    void setUrl(std::string const& value);
    bool urlIsSet() const;
    void unsetUrl();
    /// <summary>
    /// 
    /// </summary>
    std::string getTime() const;
    void setTime(std::string const& value);
    bool timeIsSet() const;
    void unsetTime();
    /// <summary>
    /// 
    /// </summary>
    std::string getReleaseTime() const;
    void setReleaseTime(std::string const& value);
    bool releaseTimeIsSet() const;
    void unsetReleaseTime();

    friend  void to_json(nlohmann::json& j, const _mc_game_version_manifest_get_200_response_versions_inner& o);
    friend  void from_json(const nlohmann::json& j, _mc_game_version_manifest_get_200_response_versions_inner& o);
protected:
    std::string m_Id;
    bool m_IdIsSet;
    std::string m_Type;
    bool m_TypeIsSet;
    std::string m_Url;
    bool m_UrlIsSet;
    std::string m_Time;
    bool m_TimeIsSet;
    std::string m_ReleaseTime;
    bool m_ReleaseTimeIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* _mc_game_version_manifest_get_200_response_versions_inner_H_ */
