/**
* 
* SDK for Minecraft versions info
*
* The version of the OpenAPI document: 0.9.0-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * _v1_packages__packageId___versionId__json_get_200_response_downloads_client.h
 *
 * 
 */

#ifndef _v1_packages__packageId___versionId__json_get_200_response_downloads_client_H_
#define _v1_packages__packageId___versionId__json_get_200_response_downloads_client_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  _v1_packages__packageId___versionId__json_get_200_response_downloads_client
{
public:
    _v1_packages__packageId___versionId__json_get_200_response_downloads_client();
    virtual ~_v1_packages__packageId___versionId__json_get_200_response_downloads_client() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const _v1_packages__packageId___versionId__json_get_200_response_downloads_client& rhs) const;
    bool operator!=(const _v1_packages__packageId___versionId__json_get_200_response_downloads_client& rhs) const;

    /////////////////////////////////////////////
    /// _v1_packages__packageId___versionId__json_get_200_response_downloads_client members

    /// <summary>
    /// 
    /// </summary>
    std::string getSha1() const;
    void setSha1(std::string const& value);
    bool sha1IsSet() const;
    void unsetSha1();
    /// <summary>
    /// 
    /// </summary>
    int32_t getSize() const;
    void setSize(int32_t const value);
    bool sizeIsSet() const;
    void unsetSize();
    /// <summary>
    /// 
    /// </summary>
    std::string getUrl() const;
    void setUrl(std::string const& value);
    bool urlIsSet() const;
    void unsetUrl();

    friend  void to_json(nlohmann::json& j, const _v1_packages__packageId___versionId__json_get_200_response_downloads_client& o);
    friend  void from_json(const nlohmann::json& j, _v1_packages__packageId___versionId__json_get_200_response_downloads_client& o);
protected:
    std::string m_Sha1;
    bool m_Sha1IsSet;
    int32_t m_Size;
    bool m_SizeIsSet;
    std::string m_Url;
    bool m_UrlIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* _v1_packages__packageId___versionId__json_get_200_response_downloads_client_H_ */
