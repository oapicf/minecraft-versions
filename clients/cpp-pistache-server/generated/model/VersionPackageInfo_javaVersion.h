/**
* 
* SDK for Minecraft versions info
*
* The version of the OpenAPI document: 0.12.1-pre.0
* Contact: blah+oapicf@cliffano.com
*
* NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
* https://openapi-generator.tech
* Do not edit the class manually.
*/
/*
 * VersionPackageInfo_javaVersion.h
 *
 * 
 */

#ifndef VersionPackageInfo_javaVersion_H_
#define VersionPackageInfo_javaVersion_H_


#include <string>
#include <nlohmann/json.hpp>

namespace org::openapitools::server::model
{

/// <summary>
/// 
/// </summary>
class  VersionPackageInfo_javaVersion
{
public:
    VersionPackageInfo_javaVersion();
    virtual ~VersionPackageInfo_javaVersion() = default;


    /// <summary>
    /// Validate the current data in the model. Throws a ValidationException on failure.
    /// </summary>
    void validate() const;

    /// <summary>
    /// Validate the current data in the model. Returns false on error and writes an error
    /// message into the given stringstream.
    /// </summary>
    bool validate(std::stringstream& msg) const;

    /// <summary>
    /// Helper overload for validate. Used when one model stores another model and calls it's validate.
    /// Not meant to be called outside that case.
    /// </summary>
    bool validate(std::stringstream& msg, const std::string& pathPrefix) const;

    bool operator==(const VersionPackageInfo_javaVersion& rhs) const;
    bool operator!=(const VersionPackageInfo_javaVersion& rhs) const;

    /////////////////////////////////////////////
    /// VersionPackageInfo_javaVersion members

    /// <summary>
    /// 
    /// </summary>
    std::string getComponent() const;
    void setComponent(std::string const& value);
    bool componentIsSet() const;
    void unsetComponent();
    /// <summary>
    /// 
    /// </summary>
    int32_t getMajorVersion() const;
    void setMajorVersion(int32_t const value);
    bool majorVersionIsSet() const;
    void unsetMajorVersion();

    friend  void to_json(nlohmann::json& j, const VersionPackageInfo_javaVersion& o);
    friend  void from_json(const nlohmann::json& j, VersionPackageInfo_javaVersion& o);
protected:
    std::string m_Component;
    bool m_ComponentIsSet;
    int32_t m_MajorVersion;
    bool m_MajorVersionIsSet;
    
};

} // namespace org::openapitools::server::model

#endif /* VersionPackageInfo_javaVersion_H_ */
