/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.prokarma.pkmst.controller;

import com.prokarma.pkmst.model.McGameVersionManifestGet200Response;
import com.prokarma.pkmst.model.V1PackagesPackageIdVersionIdJsonGet200Response;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;

import java.util.List;
/**
 * Provides the info about api methods
 * @author pkmst
 *
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaPKMSTServerCodegen", date = "2024-07-06T01:32:43.130084075Z[Etc/UTC]", comments = "Generator version: 7.6.0")
@Api(value = "Default", description = "the Default API")
public interface DefaultApi {

    @ApiOperation(value = "Get Minecraft version manifest", notes = "", response = McGameVersionManifestGet200Response.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A list of Minecraft versions with the latest and snapshot releases", response = McGameVersionManifestGet200Response.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/mc/game/version_manifest",
        produces = { "application/json" }
    )
    ResponseEntity<McGameVersionManifestGet200Response> mcGameVersionManifestGet( @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Get Minecraft version package details", notes = "", response = V1PackagesPackageIdVersionIdJsonGet200Response.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Get package version details", response = V1PackagesPackageIdVersionIdJsonGet200Response.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/v1/packages/{packageId}/{versionId}.json",
        produces = { "application/json" }
    )
    ResponseEntity<V1PackagesPackageIdVersionIdJsonGet200Response> v1PackagesPackageIdVersionIdJsonGet(@ApiParam(value = "",required=true ) @PathVariable("packageId") String packageId,@ApiParam(value = "",required=true ) @PathVariable("versionId") String versionId, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
