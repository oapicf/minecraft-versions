/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.12.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.prokarma.pkmst.controller;

import com.prokarma.pkmst.model.VersionManifest;
import com.prokarma.pkmst.model.VersionPackageInfo;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import java.io.IOException;

import java.util.List;
/**
 * Provides the info about api methods
 * @author pkmst
 *
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaPKMSTServerCodegen", date = "2025-05-10T01:44:17.459555707Z[Etc/UTC]", comments = "Generator version: 7.12.0")
@Api(value = "Default", description = "the Default API")
public interface DefaultApi {

    @ApiOperation(value = "Get Minecraft version manifest", notes = "", response = VersionManifest.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "A list of Minecraft versions with the latest and snapshot releases", response = VersionManifest.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/mc/game/version_manifest.json",
        produces = { "application/json" }
    )
    ResponseEntity<VersionManifest> getMinecraftVersionManifest( @RequestHeader(value = "Accept", required = false) String accept) throws Exception;


    @ApiOperation(value = "Get Minecraft version package info", notes = "", response = VersionPackageInfo.class, tags={  })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Get package version details", response = VersionPackageInfo.class) })
    @RequestMapping(
        method = RequestMethod.GET,
        value = "/v1/packages/{packageId}/{versionId}.json",
        produces = { "application/json" }
    )
    ResponseEntity<VersionPackageInfo> getMinecraftVersionPackageInfo(@ApiParam(value = "",required=true ) @PathVariable("packageId") String packageId,@ApiParam(value = "",required=true ) @PathVariable("versionId") String versionId, @RequestHeader(value = "Accept", required = false) String accept) throws Exception;

}
