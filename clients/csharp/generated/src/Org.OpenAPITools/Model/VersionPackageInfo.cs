/*
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.IO;
using System.Runtime.Serialization;
using System.Text;
using System.Text.RegularExpressions;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using Newtonsoft.Json.Linq;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// VersionPackageInfo
    /// </summary>
    [DataContract(Name = "VersionPackageInfo")]
    public partial class VersionPackageInfo : IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="VersionPackageInfo" /> class.
        /// </summary>
        /// <param name="varVersion">varVersion.</param>
        /// <param name="assetIndex">assetIndex.</param>
        /// <param name="assets">assets.</param>
        /// <param name="complianceLevel">complianceLevel.</param>
        /// <param name="downloads">downloads.</param>
        /// <param name="id">id.</param>
        /// <param name="javaVersion">javaVersion.</param>
        /// <param name="mainClass">mainClass.</param>
        /// <param name="minimumLauncherVersion">minimumLauncherVersion.</param>
        /// <param name="time">time.</param>
        /// <param name="releaseTime">releaseTime.</param>
        /// <param name="type">type.</param>
        public VersionPackageInfo(string varVersion = default(string), VersionPackageInfoAssetIndex assetIndex = default(VersionPackageInfoAssetIndex), string assets = default(string), int complianceLevel = default(int), VersionPackageInfoDownloads downloads = default(VersionPackageInfoDownloads), string id = default(string), VersionPackageInfoJavaVersion javaVersion = default(VersionPackageInfoJavaVersion), string mainClass = default(string), int minimumLauncherVersion = default(int), DateTime time = default(DateTime), DateTime releaseTime = default(DateTime), string type = default(string))
        {
            this.VarVersion = varVersion;
            this.AssetIndex = assetIndex;
            this.Assets = assets;
            this.ComplianceLevel = complianceLevel;
            this.Downloads = downloads;
            this.Id = id;
            this.JavaVersion = javaVersion;
            this.MainClass = mainClass;
            this.MinimumLauncherVersion = minimumLauncherVersion;
            this.Time = time;
            this.ReleaseTime = releaseTime;
            this.Type = type;
        }

        /// <summary>
        /// Gets or Sets VarVersion
        /// </summary>
        [DataMember(Name = "version", EmitDefaultValue = false)]
        public string VarVersion { get; set; }

        /// <summary>
        /// Gets or Sets AssetIndex
        /// </summary>
        [DataMember(Name = "assetIndex", EmitDefaultValue = false)]
        public VersionPackageInfoAssetIndex AssetIndex { get; set; }

        /// <summary>
        /// Gets or Sets Assets
        /// </summary>
        [DataMember(Name = "assets", EmitDefaultValue = false)]
        public string Assets { get; set; }

        /// <summary>
        /// Gets or Sets ComplianceLevel
        /// </summary>
        [DataMember(Name = "complianceLevel", EmitDefaultValue = false)]
        public int ComplianceLevel { get; set; }

        /// <summary>
        /// Gets or Sets Downloads
        /// </summary>
        [DataMember(Name = "downloads", EmitDefaultValue = false)]
        public VersionPackageInfoDownloads Downloads { get; set; }

        /// <summary>
        /// Gets or Sets Id
        /// </summary>
        [DataMember(Name = "id", EmitDefaultValue = false)]
        public string Id { get; set; }

        /// <summary>
        /// Gets or Sets JavaVersion
        /// </summary>
        [DataMember(Name = "javaVersion", EmitDefaultValue = false)]
        public VersionPackageInfoJavaVersion JavaVersion { get; set; }

        /// <summary>
        /// Gets or Sets MainClass
        /// </summary>
        /// <example>net.minecraft.client.main.Main</example>
        [DataMember(Name = "mainClass", EmitDefaultValue = false)]
        public string MainClass { get; set; }

        /// <summary>
        /// Gets or Sets MinimumLauncherVersion
        /// </summary>
        /// <example>21</example>
        [DataMember(Name = "minimumLauncherVersion", EmitDefaultValue = false)]
        public int MinimumLauncherVersion { get; set; }

        /// <summary>
        /// Gets or Sets Time
        /// </summary>
        /// <example>2024-04-01T11:14:41Z</example>
        [DataMember(Name = "time", EmitDefaultValue = false)]
        public DateTime Time { get; set; }

        /// <summary>
        /// Gets or Sets ReleaseTime
        /// </summary>
        /// <example>2024-04-01T11:07:19Z</example>
        [DataMember(Name = "releaseTime", EmitDefaultValue = false)]
        public DateTime ReleaseTime { get; set; }

        /// <summary>
        /// Gets or Sets Type
        /// </summary>
        /// <example>snapshot</example>
        [DataMember(Name = "type", EmitDefaultValue = false)]
        public string Type { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            StringBuilder sb = new StringBuilder();
            sb.Append("class VersionPackageInfo {\n");
            sb.Append("  VarVersion: ").Append(VarVersion).Append("\n");
            sb.Append("  AssetIndex: ").Append(AssetIndex).Append("\n");
            sb.Append("  Assets: ").Append(Assets).Append("\n");
            sb.Append("  ComplianceLevel: ").Append(ComplianceLevel).Append("\n");
            sb.Append("  Downloads: ").Append(Downloads).Append("\n");
            sb.Append("  Id: ").Append(Id).Append("\n");
            sb.Append("  JavaVersion: ").Append(JavaVersion).Append("\n");
            sb.Append("  MainClass: ").Append(MainClass).Append("\n");
            sb.Append("  MinimumLauncherVersion: ").Append(MinimumLauncherVersion).Append("\n");
            sb.Append("  Time: ").Append(Time).Append("\n");
            sb.Append("  ReleaseTime: ").Append(ReleaseTime).Append("\n");
            sb.Append("  Type: ").Append(Type).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
