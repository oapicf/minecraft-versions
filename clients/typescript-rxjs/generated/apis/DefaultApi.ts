// tslint:disable
/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 1.1.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts } from '../runtime';
import type {
    VersionManifest,
    VersionPackageInfo,
} from '../models';

export interface GetMinecraftVersionPackageInfoRequest {
    packageId: string;
    versionId: string;
}

/**
 * no description
 */
export class DefaultApi extends BaseAPI {

    /**
     * Get Minecraft version manifest
     */
    getMinecraftVersionManifest(): Observable<VersionManifest>
    getMinecraftVersionManifest(opts?: OperationOpts): Observable<AjaxResponse<VersionManifest>>
    getMinecraftVersionManifest(opts?: OperationOpts): Observable<VersionManifest | AjaxResponse<VersionManifest>> {
        return this.request<VersionManifest>({
            url: '/mc/game/version_manifest.json',
            method: 'GET',
        }, opts?.responseOpts);
    };

    /**
     * Get Minecraft version package info
     */
    getMinecraftVersionPackageInfo({ packageId, versionId }: GetMinecraftVersionPackageInfoRequest): Observable<VersionPackageInfo>
    getMinecraftVersionPackageInfo({ packageId, versionId }: GetMinecraftVersionPackageInfoRequest, opts?: OperationOpts): Observable<AjaxResponse<VersionPackageInfo>>
    getMinecraftVersionPackageInfo({ packageId, versionId }: GetMinecraftVersionPackageInfoRequest, opts?: OperationOpts): Observable<VersionPackageInfo | AjaxResponse<VersionPackageInfo>> {
        throwIfNullOrUndefined(packageId, 'packageId', 'getMinecraftVersionPackageInfo');
        throwIfNullOrUndefined(versionId, 'versionId', 'getMinecraftVersionPackageInfo');

        return this.request<VersionPackageInfo>({
            url: '/v1/packages/{packageId}/{versionId}.json'.replace('{packageId}', encodeURI(packageId)).replace('{versionId}', encodeURI(versionId)),
            method: 'GET',
        }, opts?.responseOpts);
    };

}
