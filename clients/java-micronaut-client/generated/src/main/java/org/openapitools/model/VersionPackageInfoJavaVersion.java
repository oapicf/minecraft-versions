/*
 * openapi-micronaut-client
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.12.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package org.openapitools.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.*;

import javax.validation.constraints.*;
import javax.validation.Valid;
import io.micronaut.core.annotation.*;
import javax.annotation.Generated;

/**
 * VersionPackageInfoJavaVersion
 */
@JsonPropertyOrder({
  VersionPackageInfoJavaVersion.JSON_PROPERTY_COMPONENT,
  VersionPackageInfoJavaVersion.JSON_PROPERTY_MAJOR_VERSION
})
@JsonTypeName("VersionPackageInfo_javaVersion")
@Generated(value="org.openapitools.codegen.languages.JavaMicronautClientCodegen", date="2024-11-03T05:50:32.994705385Z[Etc/UTC]", comments = "Generator version: 7.9.0")
@Introspected
public class VersionPackageInfoJavaVersion {
    public static final String JSON_PROPERTY_COMPONENT = "component";
    private String component;

    public static final String JSON_PROPERTY_MAJOR_VERSION = "majorVersion";
    private Integer majorVersion;

    public VersionPackageInfoJavaVersion() {
    }

    public VersionPackageInfoJavaVersion component(String component) {
        this.component = component;
        return this;
    }

    /**
     * Get component
     * @return component
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_COMPONENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public String getComponent() {
        return component;
    }

    @JsonProperty(JSON_PROPERTY_COMPONENT)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setComponent(String component) {
        this.component = component;
    }

    public VersionPackageInfoJavaVersion majorVersion(Integer majorVersion) {
        this.majorVersion = majorVersion;
        return this;
    }

    /**
     * Get majorVersion
     * @return majorVersion
     */
    @Nullable
    @JsonProperty(JSON_PROPERTY_MAJOR_VERSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public Integer getMajorVersion() {
        return majorVersion;
    }

    @JsonProperty(JSON_PROPERTY_MAJOR_VERSION)
    @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
    public void setMajorVersion(Integer majorVersion) {
        this.majorVersion = majorVersion;
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        VersionPackageInfoJavaVersion versionPackageInfoJavaVersion = (VersionPackageInfoJavaVersion) o;
        return Objects.equals(this.component, versionPackageInfoJavaVersion.component) &&
            Objects.equals(this.majorVersion, versionPackageInfoJavaVersion.majorVersion);
    }

    @Override
    public int hashCode() {
        return Objects.hash(component, majorVersion);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class VersionPackageInfoJavaVersion {\n");
        sb.append("    component: ").append(toIndentedString(component)).append("\n");
        sb.append("    majorVersion: ").append(toIndentedString(majorVersion)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

