from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.download import Download
from openapi_server import util

from openapi_server.models.download import Download  # noqa: E501

class VersionPackageInfoDownloads(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client=None, client_mappings=None, server=None, server_mappings=None):  # noqa: E501
        """VersionPackageInfoDownloads - a model defined in OpenAPI

        :param client: The client of this VersionPackageInfoDownloads.  # noqa: E501
        :type client: Download
        :param client_mappings: The client_mappings of this VersionPackageInfoDownloads.  # noqa: E501
        :type client_mappings: Download
        :param server: The server of this VersionPackageInfoDownloads.  # noqa: E501
        :type server: Download
        :param server_mappings: The server_mappings of this VersionPackageInfoDownloads.  # noqa: E501
        :type server_mappings: Download
        """
        self.openapi_types = {
            'client': Download,
            'client_mappings': Download,
            'server': Download,
            'server_mappings': Download
        }

        self.attribute_map = {
            'client': 'client',
            'client_mappings': 'client_mappings',
            'server': 'server',
            'server_mappings': 'server_mappings'
        }

        self._client = client
        self._client_mappings = client_mappings
        self._server = server
        self._server_mappings = server_mappings

    @classmethod
    def from_dict(cls, dikt) -> 'VersionPackageInfoDownloads':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VersionPackageInfo_downloads of this VersionPackageInfoDownloads.  # noqa: E501
        :rtype: VersionPackageInfoDownloads
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client(self) -> Download:
        """Gets the client of this VersionPackageInfoDownloads.


        :return: The client of this VersionPackageInfoDownloads.
        :rtype: Download
        """
        return self._client

    @client.setter
    def client(self, client: Download):
        """Sets the client of this VersionPackageInfoDownloads.


        :param client: The client of this VersionPackageInfoDownloads.
        :type client: Download
        """

        self._client = client

    @property
    def client_mappings(self) -> Download:
        """Gets the client_mappings of this VersionPackageInfoDownloads.


        :return: The client_mappings of this VersionPackageInfoDownloads.
        :rtype: Download
        """
        return self._client_mappings

    @client_mappings.setter
    def client_mappings(self, client_mappings: Download):
        """Sets the client_mappings of this VersionPackageInfoDownloads.


        :param client_mappings: The client_mappings of this VersionPackageInfoDownloads.
        :type client_mappings: Download
        """

        self._client_mappings = client_mappings

    @property
    def server(self) -> Download:
        """Gets the server of this VersionPackageInfoDownloads.


        :return: The server of this VersionPackageInfoDownloads.
        :rtype: Download
        """
        return self._server

    @server.setter
    def server(self, server: Download):
        """Sets the server of this VersionPackageInfoDownloads.


        :param server: The server of this VersionPackageInfoDownloads.
        :type server: Download
        """

        self._server = server

    @property
    def server_mappings(self) -> Download:
        """Gets the server_mappings of this VersionPackageInfoDownloads.


        :return: The server_mappings of this VersionPackageInfoDownloads.
        :rtype: Download
        """
        return self._server_mappings

    @server_mappings.setter
    def server_mappings(self, server_mappings: Download):
        """Sets the server_mappings of this VersionPackageInfoDownloads.


        :param server_mappings: The server_mappings of this VersionPackageInfoDownloads.
        :type server_mappings: Download
        """

        self._server_mappings = server_mappings
