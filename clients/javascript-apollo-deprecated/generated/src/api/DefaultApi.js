/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 1.1.1-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */



import ApiClient from "../ApiClient";
import VersionManifest from '../model/VersionManifest';
import VersionPackageInfo from '../model/VersionPackageInfo';

/**
* Default service.
* @module api/DefaultApi
* @version 1.1.1-pre.0
*/
export default class DefaultApi extends ApiClient {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    */
    constructor(baseURL = 'https://launchermeta.mojang.com') {
      super(baseURL);
    }


    /**
     * Get Minecraft version manifest
     * @param requestInit Dynamic configuration. @see {@link https://github.com/apollographql/apollo-server/pull/1277}
     * @return {Promise<module:model/VersionManifest>}
     */
    async getMinecraftVersionManifest(requestInit) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'User-Agent': 'OpenAPI-Generator/1.1.1-pre.0/Javascript',
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VersionManifest;

      return this.callApi(
        '/mc/game/version_manifest.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, requestInit
      );
    }

    /**
     * Get Minecraft version package info
     * @param {String} packageId 
     * @param {String} versionId 
     * @param requestInit Dynamic configuration. @see {@link https://github.com/apollographql/apollo-server/pull/1277}
     * @return {Promise<module:model/VersionPackageInfo>}
     */
    async getMinecraftVersionPackageInfo(packageId, versionId, requestInit) {
      let postBody = null;
      // verify the required parameter 'packageId' is set
      if (packageId === undefined || packageId === null) {
        throw new Error("Missing the required parameter 'packageId' when calling getMinecraftVersionPackageInfo");
      }
      // verify the required parameter 'versionId' is set
      if (versionId === undefined || versionId === null) {
        throw new Error("Missing the required parameter 'versionId' when calling getMinecraftVersionPackageInfo");
      }

      let pathParams = {
        'packageId': packageId,
        'versionId': versionId
      };
      let queryParams = {
      };
      let headerParams = {
        'User-Agent': 'OpenAPI-Generator/1.1.1-pre.0/Javascript',
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = VersionPackageInfo;

      return this.callApi(
        '/v1/packages/{packageId}/{versionId}.json', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, requestInit
      );
    }


}
