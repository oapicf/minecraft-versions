/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Version from './Version';
import VersionManifestLatest from './VersionManifestLatest';

/**
 * The VersionManifest model module.
 * @module model/VersionManifest
 * @version 0.9.0-pre.0
 */
class VersionManifest {
    /**
     * @member {module:model/VersionManifestLatest} latest
     * @type {module:model/VersionManifestLatest}
     */
    latest;
    /**
     * @member {Array.<module:model/Version>} versions
     * @type {Array.<module:model/Version>}
     */
    versions;

    

    /**
     * Constructs a new <code>VersionManifest</code>.
     * @alias module:model/VersionManifest
     */
    constructor() { 
        
        VersionManifest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VersionManifest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VersionManifest} obj Optional instance to populate.
     * @return {module:model/VersionManifest} The populated <code>VersionManifest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VersionManifest();

            if (data.hasOwnProperty('latest')) {
                obj['latest'] = VersionManifestLatest.constructFromObject(data['latest']);
            }
            if (data.hasOwnProperty('versions')) {
                obj['versions'] = ApiClient.convertToType(data['versions'], [Version]);
            }
        }
        return obj;
    }
}



export default VersionManifest;

