/**
 * 
 * SDK for Minecraft versions info
 *
 * The version of the OpenAPI document: 0.9.0-pre.0
 * Contact: blah+oapicf@cliffano.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VersionPackageInfoAssetIndex from './VersionPackageInfoAssetIndex';
import VersionPackageInfoDownloads from './VersionPackageInfoDownloads';
import VersionPackageInfoJavaVersion from './VersionPackageInfoJavaVersion';

/**
 * The VersionPackageInfo model module.
 * @module model/VersionPackageInfo
 * @version 0.9.0-pre.0
 */
class VersionPackageInfo {
    /**
     * @member {String} version
     * @type {String}
     */
    version;
    /**
     * @member {module:model/VersionPackageInfoAssetIndex} assetIndex
     * @type {module:model/VersionPackageInfoAssetIndex}
     */
    assetIndex;
    /**
     * @member {String} assets
     * @type {String}
     */
    assets;
    /**
     * @member {Number} complianceLevel
     * @type {Number}
     */
    complianceLevel;
    /**
     * @member {module:model/VersionPackageInfoDownloads} downloads
     * @type {module:model/VersionPackageInfoDownloads}
     */
    downloads;
    /**
     * @member {String} id
     * @type {String}
     */
    id;
    /**
     * @member {module:model/VersionPackageInfoJavaVersion} javaVersion
     * @type {module:model/VersionPackageInfoJavaVersion}
     */
    javaVersion;
    /**
     * @member {String} mainClass
     * @type {String}
     */
    mainClass;
    /**
     * @member {Number} minimumLauncherVersion
     * @type {Number}
     */
    minimumLauncherVersion;
    /**
     * @member {Date} time
     * @type {Date}
     */
    time;
    /**
     * @member {Date} releaseTime
     * @type {Date}
     */
    releaseTime;
    /**
     * @member {String} type
     * @type {String}
     */
    type;

    

    /**
     * Constructs a new <code>VersionPackageInfo</code>.
     * @alias module:model/VersionPackageInfo
     */
    constructor() { 
        
        VersionPackageInfo.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VersionPackageInfo</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VersionPackageInfo} obj Optional instance to populate.
     * @return {module:model/VersionPackageInfo} The populated <code>VersionPackageInfo</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VersionPackageInfo();

            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('assetIndex')) {
                obj['assetIndex'] = VersionPackageInfoAssetIndex.constructFromObject(data['assetIndex']);
            }
            if (data.hasOwnProperty('assets')) {
                obj['assets'] = ApiClient.convertToType(data['assets'], 'String');
            }
            if (data.hasOwnProperty('complianceLevel')) {
                obj['complianceLevel'] = ApiClient.convertToType(data['complianceLevel'], 'Number');
            }
            if (data.hasOwnProperty('downloads')) {
                obj['downloads'] = VersionPackageInfoDownloads.constructFromObject(data['downloads']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('javaVersion')) {
                obj['javaVersion'] = VersionPackageInfoJavaVersion.constructFromObject(data['javaVersion']);
            }
            if (data.hasOwnProperty('mainClass')) {
                obj['mainClass'] = ApiClient.convertToType(data['mainClass'], 'String');
            }
            if (data.hasOwnProperty('minimumLauncherVersion')) {
                obj['minimumLauncherVersion'] = ApiClient.convertToType(data['minimumLauncherVersion'], 'Number');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'Date');
            }
            if (data.hasOwnProperty('releaseTime')) {
                obj['releaseTime'] = ApiClient.convertToType(data['releaseTime'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }
}



export default VersionPackageInfo;

